
========================================================================
disasm
========================================================================

------------------------------------------------------------------------
Region: PM_REGION
------------------------------------------------------------------------

 <$reset>
0x000000        03000000                 Null = Null + Null;
0x000001        DDF00042                 jump $pre_main;

 <$interrupt.handler>
0x000002        F100001C                 pushm <r0, r1, r2>;
0x000003        0920FE4D                 r0 = Null + M[0xfffe4d];
0x000004        F3200000                 push r0;
0x000005        1900FE4D                 M[0xfffe4d] = Null + Null;
0x000006        0920FE93                 r0 = Null + M[0xfffe93];
0x000007        F3200000                 push r0;
0x000008        1900FE93                 M[0xfffe93] = Null + Null;
0x000009        0920FE71                 r0 = Null + M[0xfffe71];
0x00000A        19200050                 M[$interrupt.start_time] = r0 + Null;
0x00000B        81EEFFBF                 rFlags = rFlags AND 0xffbf;
0x00000C        1900FE12                 M[0xfffe12] = Null + Null;
0x00000D        0930FE19                 r1 = Null + M[0xfffe19];
0x00000E        0940FE44                 r2 = Null + M[0xfffe44];
0x00000F        F1007FF8                 pushm <r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, rLink, rFlags>;
0x000010        F101FFFF                 pushm <I0, I1, I2, I3, I4, I5, I6, I7, M0, M1, M2, M3, L0, L1, L4, L5>;
0x000011        F1023FFF                 pushm <rMAC2, rMAC1, rMAC0, DoLoopStart, DoLoopEnd, DivResult, DivRemainder, rMACB2, rMACB1, rMACB0, B0, B1, B4, B5>;
0x000012        1900FE17                 M[0xfffe17] = Null + Null;
0x000013        51C00000                 L0 = Null + 0;
0x000014        51D00000                 L1 = Null + 0;
0x000015        51E00000                 L4 = Null + 0;
0x000016        51F00000                 L5 = Null + 0;
0x000017        F3000000                 push Null;
0x000018        F1DAFFFF                 B5 = M[SP + -0x1];
0x000019        F1CAFFFF                 B4 = M[SP + -0x1];
0x00001A        F1BAFFFF                 B1 = M[SP + -0x1];
0x00001B        F3A60000                 pop B0;
0x00001C        0940FE18                 r2 = Null + M[0xfffe18];
0x00001D        D1540277                 r3 = M[r2 + 631];
0x00001E        01E00080                 rFlags = Null + 128;
0x00001F        E420002F                 r0 = Null + 1;
0x000020        FD0000FF 090032C8        Null = Null + M[$interrupt.block_count];
0x000022        00200001                 if NE r0 = Null + Null;
0x000023        1920FE12                 M[0xfffe12] = r0 + Null;
0x000024        E005000F                 call r3;
0x000025        01E00000                 rFlags = Null + 0;
0x000026        F1063FFF                 popm <rMAC2, rMAC12, rMAC0, DoLoopStart, DoLoopEnd, DivResult, DivRemainder, rMACB2, rMACB12, rMACB0, B0, B1, B4, B5>;
0x000027        F105FFFF                 popm <I0, I1, I2, I3, I4, I5, I6, I7, M0, M1, M2, M3, L0, L1, L4, L5>;
0x000028        F1047FF8                 popm <r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, rLink, rFlags>;
0x000029        1940FE44                 M[0xfffe44] = r2 + Null;
0x00002A        85334000                 r1 = r1 OR 0x4000;
0x00002B        1930FE16                 M[0xfffe16] = r1 + Null;
0x00002C        093002C9                 r1 = Null + M[$interrupt.total_time];
0x00002D        29330050                 r1 = r1 - M[$interrupt.start_time];
0x00002E        0933FE71                 r1 = r1 + M[0xfffe71];
0x00002F        193002C9                 M[$interrupt.total_time] = r1 + Null;
0x000030        F104000C                 popm <r0, r1>;
0x000031        1930FE93                 M[0xfffe93] = r1 + Null;
0x000032        1920FE4D                 M[0xfffe4d] = r0 + Null;
0x000033        F104001C                 popm <r0, r1, r2>;
0x000034        DC0E000F                 rti;

 <$flash.init_pm>
0x000035        09200249                 r0 = Null + M[$flash.code.address];
0x000036        1920FE83                 M[0xfffe83] = r0 + Null;
0x000037        FD000004 85200000        r0 = Null OR 0x40000;
0x000039        1920FE84                 M[0xfffe84] = r0 + Null;
0x00003A        DC0D000F                 rts;

 <$flash.init_dmconst>
0x00003B        09200251                 r0 = Null + M[$flash.data24.address];
0x00003C        1920FE5C                 M[0xfffe5c] = r0 + Null;
0x00003D        01200002                 r0 = Null + 2;
0x00003E        1920FE62                 M[0xfffe62] = r0 + Null;
0x00003F        0920024D                 r0 = Null + M[$flash.data16.address];
0x000040        1920FE5B                 M[0xfffe5b] = r0 + Null;
0x000041        1900FE61                 M[0xfffe61] = Null + Null;
0x000042        DC0D000F                 rts;

 <$pre_main>
0x000043        E1F0FFF2                 call $flash.init_pm;
0x000044        DDF02FBC                 jump $main;

 <$message.received_service_routine>
0x000045        F3D00000                 push rLink;
0x000046        51800000                 M0 = Null + 0;
0x000047        0920FE1D                 r0 = Null + M[0xfffe1d];
0x000048        8132FFF0                 r1 = r0 AND 0xfff0;
0x000049        8903FFF0                 Null = r1 XOR 0xfff0;
0x00004A        DD10001E                 if NE jump $M.message.received_service_routine.non_long_message;
0x00004B        81020001                 Null = r0 AND 0x1;
0x00004C        DD000003                 if EQ jump $M.message.received_service_routine.not_initial_packet;
0x00004D        FD0000FF 190032CB        M[$message.long_message_size] = Null + Null;

 <$M.message.received_service_routine.not_initial_packet>
0x00004F        FD0000FF 093032CB        r1 = Null + M[$message.long_message_size];
0x000051        21030052                 Null = r1 - 82;
0x000052        DD400002                 if NEG jump $M.message.received_service_routine.message_not_too_long;
0x000053        21330004                 r1 = r1 - 4;

 <$M.message.received_service_routine.message_not_too_long>
0x000054        0940E006                 r2 = Null + M[0xffe006];
0x000055        D54301F1                 M[r1 + 497] = r2;
0x000056        0940E007                 r2 = Null + M[0xffe007];
0x000057        D54301F2                 M[r1 + 498] = r2;
0x000058        0940E008                 r2 = Null + M[0xffe008];
0x000059        D54301F3                 M[r1 + 499] = r2;
0x00005A        0940E009                 r2 = Null + M[0xffe009];
0x00005B        D54301F4                 M[r1 + 500] = r2;
0x00005C        01330004                 r1 = r1 + 4;
0x00005D        FD0000FF 193032CB        M[$message.long_message_size] = r1 + Null;
0x00005F        81020002                 Null = r0 AND 0x2;
0x000060        DD100005                 if NE jump $M.message.received_service_routine.final_packet;

 <$M.message.received_service_routine.not_final_packet>
0x000061        0970E001                 r5 = Null + M[0xffe001];
0x000062        E477002F                 r5 = r5 + 1;
0x000063        1970E001                 M[0xffe001] = r5 + Null;
0x000064        DDF0028A                 jump $pop_rLink_and_rts;

 <$M.message.received_service_routine.final_packet>
0x000065        092001F1                 r0 = Null + M[$message.long_message_data];
0x000066        8122FFFF                 r0 = r0 AND 0xffff;
0x000067        51800001                 M0 = Null + 1;

 <$M.message.received_service_routine.non_long_message>
0x000068        01C00032                 r10 = Null + 50;
0x000069        FD0000FF 093032C9        r1 = Null + M[$message.last_addr];
0x00006B        E5F00009                 do $M.message.received_service_routine.loop;
0x00006C        E403002F                 Null = r1 + 1;
0x00006D        DD000008                 if EQ jump $M.message.received_service_routine.no_handler;
0x00006E        D1430003                 r2 = M[r1 + 3];
0x00006F        8052004F                 r3 = r0 AND r2;
0x000070        D1430001                 r2 = M[r1 + 1];
0x000071        2005004F                 Null = r3 - r2;
0x000072        DD000007                 if EQ jump $M.message.received_service_routine.found;
0x000073        D1330000                 r1 = M[r1 + 0];

 <$M.message.received_service_routine.loop>
0x000074        E1F009AC                 call $error;

 <$M.message.received_service_routine.no_handler>
0x000075        0970E001                 r5 = Null + M[0xffe001];
0x000076        E477002F                 r5 = r5 + 1;
0x000077        1970E001                 M[0xffe001] = r5 + Null;
0x000078        DDF00276                 jump $pop_rLink_and_rts;

 <$M.message.received_service_routine.found>
0x000079        D1D30002                 rLink = M[r1 + 2];
0x00007A        47080000                 Null = Null + M0;
0x00007B        DD000006                 if EQ jump $M.message.received_service_routine.short_message_mode;
0x00007C        0032000F                 r1 = r0 + Null;
0x00007D        094001F2                 r2 = Null + M[0x1f2];
0x00007E        015001F3                 r3 = Null + 499;
0x00007F        0120FFFE                 r0 = Null + -2;
0x000080        DDF00005                 jump $M.message.received_service_routine.message_mode_done;

 <$M.message.received_service_routine.short_message_mode>
0x000081        0930E006                 r1 = Null + M[0xffe006];
0x000082        0940E007                 r2 = Null + M[0xffe007];
0x000083        0950E008                 r3 = Null + M[0xffe008];
0x000084        0960E009                 r4 = Null + M[0xffe009];

 <$M.message.received_service_routine.message_mode_done>
0x000085        0970E001                 r5 = Null + M[0xffe001];
0x000086        E477002F                 r5 = r5 + 1;
0x000087        1970E001                 M[0xffe001] = r5 + Null;
0x000088        E00D000F                 call rLink;
0x000089        DDF00265                 jump $pop_rLink_and_rts;

 <$cbuffer.configure_port_message_handler>
0x00008A        F3D00000                 push rLink;
0x00008B        2103000C                 Null = r1 - 12;
0x00008C        E1500020                 if POS call $M.cbuffer.configure_port_message_handler.write_port;

 <$M.cbuffer.configure_port_message_handler.read_port>
0x00008D        D5530062                 M[r1 + 98] = r3;
0x00008E        FD0000FF D543320E        M[r1 + -52722] = r2;
0x000090        DD100005                 if NE jump $M.cbuffer.configure_port_message_handler.read_port_connect;
0x000091        FD0000FF 092032C6        r0 = Null + M[$cbuffer.read_port_disconnect_address];
0x000093        E0020001                 if NE call r0;
0x000094        DDF0025A                 jump $pop_rLink_and_rts;

 <$M.cbuffer.configure_port_message_handler.read_port_connect>
0x000095        0023000F                 r0 = r1 + Null;
0x000096        D144FFFF                 r2 = M[r2 + -1];
0x000097        01300040                 r1 = Null + 64;
0x000098        8D440078                 r2 = r2 LSHIFT -8;
0x000099        8C43004F                 r2 = r1 LSHIFT r2;
0x00009A        FD0000FF D54231F6        M[r0 + -52746] = r2;
0x00009C        E430002F                 r1 = Null + 1;
0x00009D        0140000D                 r2 = Null + 13;
0x00009E        2105F000                 Null = r3 - -4096;
0x00009F        00340004                 if NEG r1 = r2 + Null;
0x0000A0        F3200000                 push r0;
0x0000A1        F3400000                 push r2;
0x0000A2        01400062                 r2 = Null + 98;
0x0000A3        65020007                 Null = 7 - r0;
0x0000A4        00220044                 if NEG r0 = r0 + r2;
0x0000A5        D532FE7B                 M[r0 + -389] = r1;
0x0000A6        F3440000                 pop r2;
0x0000A7        F3240000                 pop r0;
0x0000A8        0032000F                 r1 = r0 + Null;
0x0000A9        092002C6                 r0 = Null + M[$cbuffer.read_port_connect_address];
0x0000AA        E0020001                 if NE call r0;
0x0000AB        DDF00243                 jump $pop_rLink_and_rts;

 <$M.cbuffer.configure_port_message_handler.write_port>
0x0000AC        D5530062                 M[r1 + 98] = r3;
0x0000AD        FD0000FF D543320E        M[r1 + -52722] = r2;
0x0000AF        DD100005                 if NE jump $M.cbuffer.configure_port_message_handler.write_port_connect;
0x0000B0        FD0000FF 092032C5        r0 = Null + M[$cbuffer.write_port_disconnect_address];
0x0000B2        E0020001                 if NE call r0;
0x0000B3        DDF0023B                 jump $pop_rLink_and_rts;

 <$M.cbuffer.configure_port_message_handler.write_port_connect>
0x0000B4        0023000F                 r0 = r1 + Null;
0x0000B5        D144FFFF                 r2 = M[r2 + -1];
0x0000B6        01300040                 r1 = Null + 64;
0x0000B7        8D440078                 r2 = r2 LSHIFT -8;
0x0000B8        8C43004F                 r2 = r1 LSHIFT r2;
0x0000B9        FD0000FF D54231F6        M[r0 + -52746] = r2;
0x0000BB        01300009                 r1 = Null + 9;
0x0000BC        01400005                 r2 = Null + 5;
0x0000BD        2105F000                 Null = r3 - -4096;
0x0000BE        00340004                 if NEG r1 = r2 + Null;
0x0000BF        F3200000                 push r0;
0x0000C0        F3400000                 push r2;
0x0000C1        2122000C                 r0 = r0 - 12;
0x0000C2        01400066                 r2 = Null + 102;
0x0000C3        65020007                 Null = 7 - r0;
0x0000C4        00220044                 if NEG r0 = r0 + r2;
0x0000C5        D532FE73                 M[r0 + -397] = r1;
0x0000C6        F3440000                 pop r2;
0x0000C7        F3240000                 pop r0;
0x0000C8        0032000F                 r1 = r0 + Null;
0x0000C9        092002C5                 r0 = Null + M[$cbuffer.write_port_connect_address];
0x0000CA        E0020001                 if NE call r0;
0x0000CB        DDF00223                 jump $pop_rLink_and_rts;

 <$atan>
0x0000CC        FD000080 01400000        r2 = Null + -8388608;
0x0000CE        FD000080 01500000        r3 = Null + -8388608;
0x0000D0        FD000021 0190DE6A        r7 = Null + 2219626;
0x0000D2        FD000008 01A0BC6A        r8 = Null + 572522;
0x0000D4        FD00007F 0160FFFF        r4 = Null + 8388607;
0x0000D6        0027000F                 r0 = r5 + Null;
0x0000D7        DD500004                 if POS jump $M.math.atan.endAbsReal0;
0x0000D8        FD00007F 0140FFFF        r2 = Null + 8388607;
0x0000DA        95228000                 r0 = r0 * -1 (frac);

 <$M.math.atan.endAbsReal0>
0x0000DB        0038000F                 r1 = r6 + Null;
0x0000DC        DD500004                 if POS jump $M.math.atan.endAbsImag0;
0x0000DD        FD00007F 0150FFFF        r3 = Null + 8388607;
0x0000DF        95338000                 r1 = r1 * -1 (frac);

 <$M.math.atan.endAbsImag0>
0x0000E0        2003002F                 Null = r1 - r0;
0x0000E1        DDB00006                 if LT jump $M.math.atan.IdivQ;

 <$M.math.atan.QdivI>
0x0000E2        91E7007F                 rMAC = r5 ASHIFT -1 (MI);
0x0000E3        D9080000                 Div = rMAC / r6;
0x0000E4        2090009F                 r7 = Null - r7;
0x0000E5        0064000F                 r4 = r2 + Null;
0x0000E6        DDF00004                 jump $M.math.atan.endDivIQ;

 <$M.math.atan.IdivQ>
0x0000E7        91E8007F                 rMAC = r6 ASHIFT -1 (MI);
0x0000E8        D9070000                 Div = rMAC / r5;
0x0000E9        0065000F                 r4 = r3 + Null;

 <$M.math.atan.endDivIQ>
0x0000EA        FD00009B 01507813        r3 = Null + -6588397;
0x0000EC        2007008F                 Null = r5 - r6;
0x0000ED        20A000AB                 if LT r8 = Null - r8;
0x0000EE        2003007F                 Null = r1 - r5;
0x0000EF        DDB00009                 if LT jump $M.math.atan.Q18;

 <$M.math.atan.Q45>
0x0000F0        0003007F                 Null = r1 + r5;
0x0000F1        DDC00003                 if GT jump $M.math.atan.Q23;
0x0000F2        97560000                 r3 = r3 * r4 (frac);
0x0000F3        DDF00006                 jump $M.math.atan.endQuadrants;

 <$M.math.atan.Q23>
0x0000F4        9155007F                 r3 = r3 ASHIFT -1;
0x0000F5        2002008F                 Null = r0 - r6;
0x0000F6        2050005B                 if LT r3 = Null - r3;
0x0000F7        DDF00002                 jump $M.math.atan.endQuadrants;

 <$M.math.atan.Q18>
0x0000F8        01500000                 r3 = Null + 0;

 <$M.math.atan.endQuadrants>
0x0000F9        0015000F                 rMAC = r3 + Null;
0x0000FA        97A60000                 r8 = r8 * r4 (frac);
0x0000FB        D9200001                 r0 = DivResult;
0x0000FC        9432002F                 r1 = r0 * r0 (frac);
0x0000FD        AC1300AF                 rMAC = rMAC + r1 * r8 (SS);
0x0000FE        AC19002F                 rMAC = rMAC + r7 * r0 (SS);
0x0000FF        8D310000                 r1 = rMAC LSHIFT 0;
0x000100        8D210018                 r0 = rMAC LSHIFT 24;
0x000101        FD000051 01407CC1        r2 = Null + 5340353;
0x000103        97240000                 r0 = r0 * r2 (frac);
0x000104        CC13004F                 rMAC = r1 * r2 (SS);
0x000105        FD000000 AD120001        rMAC = rMAC + r0 * 1.1920928955078125e-007 (SS);
0x000107        91710001                 r5 = rMAC ASHIFT 1;
0x000108        DC0D000F                 rts;

 <$message.send_long>
0x000109        F3D00000                 push rLink;
0x00010A        E1F001BD                 call $block_interrupts;
0x00010B        0140FFFE                 r2 = Null + -2;
0x00010C        01C60005                 r10 = r4 + 5;
0x00010D        8DCC007E                 r10 = r10 LSHIFT -2;
0x00010E        FD0000FF 093032CA        r1 = Null + M[$message.queue_write_ptr];
0x000110        8580FFF1                 r6 = Null OR 0xfff1;
0x000111        E5F00022                 do $M.message.send_long.long_message_loop;
0x000112        01230005                 r0 = r1 + 5;
0x000113        2102006E                 Null = r0 - 110;
0x000114        00200000                 if EQ r0 = Null + Null;
0x000115        290202CA                 Null = r0 - M[$message.queue_read_ptr];
0x000116        DD000020                 if EQ jump $M.message.send_long.all_done;
0x000117        E40C003F                 Null = r10 - 1;
0x000118        DD100002                 if NE jump $M.message.send_long.not_last_packet;
0x000119        85880002                 r6 = r6 OR 0x2;

 <$M.message.send_long.not_last_packet>
0x00011A        FD0000FF D5833188        M[r1 + -52856] = r6;
0x00011C        81080001                 Null = r6 AND 0x1;
0x00011D        DD000008                 if EQ jump $M.message.send_long.not_first_message;
0x00011E        E488003F                 r6 = r6 - 1;
0x00011F        FD0000FF D5533189        M[r1 + -52855] = r3;
0x000121        FD0000FF D563318A        M[r1 + -52854] = r4;
0x000123        21770002                 r5 = r5 - 2;
0x000124        DDF00007                 jump $M.message.send_long.last_two_words;

 <$M.message.send_long.not_first_message>
0x000125        D047000F                 r2 = M[r5 + Null];
0x000126        FD0000FF D5433189        M[r1 + -52855] = r2;
0x000128        D1470001                 r2 = M[r5 + 1];
0x000129        FD0000FF D543318A        M[r1 + -52854] = r2;

 <$M.message.send_long.last_two_words>
0x00012B        D1470002                 r2 = M[r5 + 2];
0x00012C        FD0000FF D543318B        M[r1 + -52853] = r2;
0x00012E        D1470003                 r2 = M[r5 + 3];
0x00012F        FD0000FF D543318C        M[r1 + -52852] = r2;
0x000131        01770004                 r5 = r5 + 4;
0x000132        0032000F                 r1 = r0 + Null;

 <$M.message.send_long.long_message_loop>
0x000133        FD0000FF 192032CA        M[$message.queue_write_ptr] = r0 + Null;
0x000135        E1F00003                 call $message.private.try_to_send_message;

 <$M.message.send_long.all_done>
0x000136        E1F0017F                 call $interrupt.unblock;
0x000137        DDF001B7                 jump $pop_rLink_and_rts;

 <$message.private.try_to_send_message>
0x000138        F3D00000                 push rLink;
0x000139        E1F0018E                 call $block_interrupts;
0x00013A        0920E000                 r0 = Null + M[0xffe000];
0x00013B        292202CB                 r0 = r0 - M[$message.last_seq_sent];
0x00013C        8102FFFF                 Null = r0 AND 0xffff;
0x00013D        DD10001B                 if NE jump $M.message.private.try_to_send_message.queue_not_empty;
0x00013E        093002CA                 r1 = Null + M[$message.queue_read_ptr];
0x00013F        FD0000FF D1233189        r0 = M[r1 + -52855];
0x000141        1920E002                 M[0xffe002] = r0 + Null;
0x000142        FD0000FF D123318A        r0 = M[r1 + -52854];
0x000144        1920E003                 M[0xffe003] = r0 + Null;
0x000145        FD0000FF D123318B        r0 = M[r1 + -52853];
0x000147        1920E004                 M[0xffe004] = r0 + Null;
0x000148        FD0000FF D123318C        r0 = M[r1 + -52852];
0x00014A        1920E005                 M[0xffe005] = r0 + Null;
0x00014B        092002CB                 r0 = Null + M[$message.last_seq_sent];
0x00014C        E422002F                 r0 = r0 + 1;
0x00014D        192002CB                 M[$message.last_seq_sent] = r0 + Null;
0x00014E        FD0000FF D1233188        r0 = M[r1 + -52856];
0x000150        1920FE1B                 M[0xfffe1b] = r0 + Null;
0x000151        01330005                 r1 = r1 + 5;
0x000152        2103006E                 Null = r1 - 110;
0x000153        00300000                 if EQ r1 = Null + Null;
0x000154        193002CA                 M[$message.queue_read_ptr] = r1 + Null;
0x000155        FD0000FF 290332CA        Null = r1 - M[$message.queue_write_ptr];
0x000157        DD000009                 if EQ jump $M.message.private.try_to_send_message.all_done;

 <$M.message.private.try_to_send_message.queue_not_empty>
0x000158        FD0000FF 0940329D        r2 = Null + M[0xff329d];
0x00015A        E1F00100                 call $timer.cancel_event;
0x00015B        FD0000FF 0130329A        r1 = Null + -52582;
0x00015D        014003E8                 r2 = Null + 1000;
0x00015E        01500138                 r3 = Null + 312;
0x00015F        E1F0018D                 call $timer.schedule_event_in;

 <$M.message.private.try_to_send_message.all_done>
0x000160        E1F00155                 call $interrupt.unblock;
0x000161        DDF0018D                 jump $pop_rLink_and_rts;

 <$cbuffer.get_write_address_and_size.its_a_port>
0x000162        8132001F                 r1 = r0 AND 0x1f;
0x000163        2133000C                 r1 = r1 - 12;
0x000164        194002A8                 M[$cbuffer.tmp] = r2 + Null;
0x000165        FD000033 8102FC00        Null = r0 AND 0x33fc00;
0x000167        DD00001C                 if EQ jump $M.cbuffer.get_write_address_and_size.its_a_port.no_forcing;
0x000168        195002A9                 M[0x2a9] = r3 + Null;
0x000169        01400066                 r2 = Null + 102;
0x00016A        65030007                 Null = 7 - r1;
0x00016B        00330044                 if NEG r1 = r1 + r2;
0x00016C        D153FE73                 r3 = M[r1 + -397];
0x00016D        FD000030 81420000        r2 = r0 AND 0x300000;
0x00016F        DD000005                 if EQ jump $M.cbuffer.get_write_address_and_size.its_a_port.no_forcing_endian;
0x000170        8155FFFB                 r3 = r3 AND 0xfffb;
0x000171        8D44006B                 r2 = r2 LSHIFT -21;
0x000172        8D440002                 r2 = r2 LSHIFT 2;
0x000173        87540000                 r3 = r3 OR r2;

 <$M.cbuffer.get_write_address_and_size.its_a_port.no_forcing_endian>
0x000174        FD000003 81428000        r2 = r0 AND 0x38000;
0x000176        DD000005                 if EQ jump $M.cbuffer.get_write_address_and_size.its_a_port.no_forcing_bitwidth;
0x000177        8155FFFC                 r3 = r3 AND 0xfffc;
0x000178        8D440070                 r2 = r2 LSHIFT -16;
0x000179        8D440000                 r2 = r2 LSHIFT 0;
0x00017A        87540000                 r3 = r3 OR r2;

 <$M.cbuffer.get_write_address_and_size.its_a_port.no_forcing_bitwidth>
0x00017B        81426000                 r2 = r0 AND 0x6000;
0x00017C        DD000005                 if EQ jump $M.cbuffer.get_write_address_and_size.its_a_port.no_forcing_saturate;
0x00017D        8155FFF7                 r3 = r3 AND 0xfff7;
0x00017E        8D440072                 r2 = r2 LSHIFT -14;
0x00017F        8D440003                 r2 = r2 LSHIFT 3;
0x000180        87540000                 r3 = r3 OR r2;

 <$M.cbuffer.get_write_address_and_size.its_a_port.no_forcing_saturate>
0x000181        D553FE73                 M[r1 + -397] = r3;
0x000182        095002A9                 r3 = Null + M[0x2a9];

 <$M.cbuffer.get_write_address_and_size.its_a_port.no_forcing>
0x000183        8132001F                 r1 = r0 AND 0x1f;
0x000184        2133000C                 r1 = r1 - 12;
0x000185        01400009                 r2 = Null + 9;
0x000186        65030007                 Null = 7 - r1;
0x000187        00330044                 if NEG r1 = r1 + r2;
0x000188        094002A8                 r2 = Null + M[$cbuffer.tmp];
0x000189        0123FE23                 r0 = r1 + -477;
0x00018A        E430002F                 r1 = Null + 1;
0x00018B        DC0D000F                 rts;

 <$cbuffer.get_read_address_and_size.its_a_port>
0x00018C        8132001F                 r1 = r0 AND 0x1f;
0x00018D        FD00003F 81029C00        Null = r0 AND 0x3f9c00;
0x00018F        DD00001F                 if EQ jump $M.cbuffer.get_read_address_and_size.its_a_port.no_forcing;
0x000190        194002A8                 M[$cbuffer.tmp] = r2 + Null;
0x000191        195002A9                 M[0x2a9] = r3 + Null;
0x000192        01400062                 r2 = Null + 98;
0x000193        65030007                 Null = 7 - r1;
0x000194        00330044                 if NEG r1 = r1 + r2;
0x000195        D153FE7B                 r3 = M[r1 + -389];
0x000196        FD000030 81420000        r2 = r0 AND 0x300000;
0x000198        DD000005                 if EQ jump $M.cbuffer.get_read_address_and_size.its_a_port.no_forcing_endian;
0x000199        8155FFFB                 r3 = r3 AND 0xfffb;
0x00019A        8D44006B                 r2 = r2 LSHIFT -21;
0x00019B        8D440002                 r2 = r2 LSHIFT 2;
0x00019C        87540000                 r3 = r3 OR r2;

 <$M.cbuffer.get_read_address_and_size.its_a_port.no_forcing_endian>
0x00019D        FD00000C 81420000        r2 = r0 AND 0xc0000;
0x00019F        DD000005                 if EQ jump $M.cbuffer.get_read_address_and_size.its_a_port.no_forcing_sign_extend;
0x0001A0        8155FFF7                 r3 = r3 AND 0xfff7;
0x0001A1        8D44006D                 r2 = r2 LSHIFT -19;
0x0001A2        8D440003                 r2 = r2 LSHIFT 3;
0x0001A3        87540000                 r3 = r3 OR r2;

 <$M.cbuffer.get_read_address_and_size.its_a_port.no_forcing_sign_extend>
0x0001A4        FD000003 81428000        r2 = r0 AND 0x38000;
0x0001A6        DD000005                 if EQ jump $M.cbuffer.get_read_address_and_size.its_a_port.no_forcing_bitwidth;
0x0001A7        8155FFFC                 r3 = r3 AND 0xfffc;
0x0001A8        8D440070                 r2 = r2 LSHIFT -16;
0x0001A9        8D440000                 r2 = r2 LSHIFT 0;
0x0001AA        87540000                 r3 = r3 OR r2;

 <$M.cbuffer.get_read_address_and_size.its_a_port.no_forcing_bitwidth>
0x0001AB        D553FE7B                 M[r1 + -389] = r3;
0x0001AC        094002A8                 r2 = Null + M[$cbuffer.tmp];
0x0001AD        095002A9                 r3 = Null + M[0x2a9];

 <$M.cbuffer.get_read_address_and_size.its_a_port.no_forcing>
0x0001AE        8122001F                 r0 = r0 AND 0x1f;
0x0001AF        01300005                 r1 = Null + 5;
0x0001B0        65020007                 Null = 7 - r0;
0x0001B1        00220034                 if NEG r0 = r0 + r1;
0x0001B2        0122FE2B                 r0 = r0 + -469;
0x0001B3        E430002F                 r1 = Null + 1;
0x0001B4        DC0D000F                 rts;

 <$timer.schedule_event_at>
0x0001B5        F3D00000                 push rLink;
0x0001B6        E1F00111                 call $block_interrupts;
0x0001B7        01C00032                 r10 = Null + 50;
0x0001B8        016002CE                 r4 = Null + 718;
0x0001B9        092002CE                 r0 = Null + M[$timer.last_addr];
0x0001BA        E5F00008                 do $M.timer.schedule_event_at.loop;
0x0001BB        E402002F                 Null = r0 + 1;
0x0001BC        DD000007                 if EQ jump $M.timer.schedule_event_at.insert_here;
0x0001BD        D1720001                 r5 = M[r0 + 1];
0x0001BE        2004007F                 Null = r2 - r5;
0x0001BF        DD400004                 if NEG jump $M.timer.schedule_event_at.insert_here;
0x0001C0        0062000F                 r4 = r0 + Null;
0x0001C1        D1220000                 r0 = M[r0 + 0];

 <$M.timer.schedule_event_at.loop>
0x0001C2        E1F0085E                 call $error;

 <$M.timer.schedule_event_at.insert_here>
0x0001C3        D5360000                 M[r4 + 0] = r1;
0x0001C4        D5230000                 M[r1 + 0] = r0;
0x0001C5        D5430001                 M[r1 + 1] = r2;
0x0001C6        D5530002                 M[r1 + 2] = r3;
0x0001C7        FD0000FF 095032CD        r3 = Null + M[$timer.id];
0x0001C9        D5530003                 M[r1 + 3] = r3;
0x0001CA        E425002F                 r0 = r3 + 1;
0x0001CB        20200050                 if EQ r0 = Null - r3;
0x0001CC        FD0000FF 192032CD        M[$timer.id] = r0 + Null;
0x0001CE        0900FE1F                 Null = Null + M[0xfffe1f];
0x0001CF        DD000003                 if EQ jump $M.timer.schedule_event_at.no_current_timer_set;
0x0001D0        2904FE21                 Null = r2 - M[0xfffe21];
0x0001D1        DD500004                 if POS jump $M.timer.schedule_event_at.done;

 <$M.timer.schedule_event_at.no_current_timer_set>
0x0001D2        1940FE21                 M[0xfffe21] = r2 + Null;
0x0001D3        E420002F                 r0 = Null + 1;
0x0001D4        1920FE1F                 M[0xfffe1f] = r0 + Null;

 <$M.timer.schedule_event_at.done>
0x0001D5        E1F000E0                 call $interrupt.unblock;
0x0001D6        DDF00118                 jump $pop_rLink_and_rts;

 <$cbuffer.calc_amount_data.its_a_port>
0x0001D7        8132001F                 r1 = r0 AND 0x1f;
0x0001D8        D1430062                 r2 = M[r1 + 98];
0x0001D9        00200000                 if EQ r0 = Null + Null;
0x0001DA        DC0D0000                 if EQ rts;
0x0001DB        D3400000                 r2 = M[r2 + Null];
0x0001DC        195002A8                 M[$cbuffer.tmp] = r3 + Null;
0x0001DD        FD0000FF D153320E        r3 = M[r1 + -52722];
0x0001DF        D3500000                 r3 = M[r3 + Null];
0x0001E0        2054005F                 r3 = r2 - r3;
0x0001E1        FD0000FF D14331F6        r2 = M[r1 + -52746];
0x0001E3        E434003F                 r1 = r2 - 1;
0x0001E4        8035003F                 r1 = r3 AND r1;
0x0001E5        095002A8                 r3 = Null + M[$cbuffer.tmp];
0x0001E6        FD000003 81228000        r0 = r0 AND 0x38000;
0x0001E8        DD00000F                 if EQ jump $M.cbuffer.calc_amount_data.its_a_port.port_width_16bit;
0x0001E9        FD000001 21028000        Null = r0 - 98304;
0x0001EB        DD00000C                 if EQ jump $M.cbuffer.calc_amount_data.its_a_port.port_width_16bit;
0x0001EC        DD400009                 if NEG jump $M.cbuffer.calc_amount_data.its_a_port.port_width_8bit;
0x0001ED        FD000002 21028000        Null = r0 - 163840;
0x0001EF        DD000003                 if EQ jump $M.cbuffer.calc_amount_data.its_a_port.port_width_24bit;

 <$M.cbuffer.calc_amount_data.its_a_port.port_width_32bit>
0x0001F0        9123007E                 r0 = r1 ASHIFT -2;
0x0001F1        DC0D000F                 rts;

 <$M.cbuffer.calc_amount_data.its_a_port.port_width_24bit>
0x0001F2        E423003F                 r0 = r1 - 1;
0x0001F3        95222AAB                 r0 = r0 * 0.333343505859375 (frac);
0x0001F4        DC0D000F                 rts;

 <$M.cbuffer.calc_amount_data.its_a_port.port_width_8bit>
0x0001F5        0023000F                 r0 = r1 + Null;
0x0001F6        DC0D000F                 rts;

 <$M.cbuffer.calc_amount_data.its_a_port.port_width_16bit>
0x0001F7        9123007F                 r0 = r1 ASHIFT -1;
0x0001F8        DC0D000F                 rts;

 <$pskey.private.send_request>
0x0001F9        FD0000FF 090032CC        Null = Null + M[$pskey.request_in_progress];
0x0001FB        DC0D0001                 if NE rts;
0x0001FC        F3D00000                 push rLink;
0x0001FD        FD0000FF 094032A5        r2 = Null + M[0xff32a5];
0x0001FF        E1F0005B                 call $timer.cancel_event;
0x000200        E1F000D0                 call $message.send_queue_space;
0x000201        21020005                 Null = r0 - 5;
0x000202        DD400009                 if NEG jump $M.pskey.private.send_request.try_to_send_later;
0x000203        093002CD                 r1 = Null + M[$pskey.last_addr];
0x000204        85408006                 r2 = Null OR 0x8006;
0x000205        D1530001                 r3 = M[r1 + 1];
0x000206        E1F00026                 call $message.send_short;
0x000207        E420002F                 r0 = Null + 1;
0x000208        FD0000FF 192032CC        M[$pskey.request_in_progress] = r0 + Null;
0x00020A        DDF000E4                 jump $pop_rLink_and_rts;

 <$M.pskey.private.send_request.try_to_send_later>
0x00020B        FD0000FF 013032A2        r1 = Null + -52574;
0x00020D        01402710                 r2 = Null + 10000;
0x00020E        015001F9                 r3 = Null + 505;
0x00020F        E1F000DD                 call $timer.schedule_event_in;
0x000210        DDF000DE                 jump $pop_rLink_and_rts;

 <$pskey.result_message_handler>
0x000211        FD000000 21028008        Null = r0 - 32776;
0x000213        DD000003                 if EQ jump $M.pskey.result_message_handler.failure;
0x000214        D035000F                 r1 = M[r3 + Null];
0x000215        DDF00002                 jump $M.pskey.result_message_handler.ready;

 <$M.pskey.result_message_handler.failure>
0x000216        E440003F                 r2 = Null - 1;

 <$M.pskey.result_message_handler.ready>
0x000217        FD0000FF 190032CC        M[$pskey.request_in_progress] = Null + Null;
0x000219        017002CD                 r5 = Null + 717;
0x00021A        092002CD                 r0 = Null + M[$pskey.last_addr];

 <$M.pskey.result_message_handler.find_structure_loop>
0x00021B        D1620001                 r4 = M[r0 + 1];
0x00021C        2003006F                 Null = r1 - r4;
0x00021D        DD000006                 if EQ jump $M.pskey.result_message_handler.structure_found;
0x00021E        0072000F                 r5 = r0 + Null;
0x00021F        D1220000                 r0 = M[r0 + 0];
0x000220        E402002F                 Null = r0 + 1;
0x000221        DD10FFFA                 if NE jump $M.pskey.result_message_handler.find_structure_loop;
0x000222        DC0D000F                 rts;

 <$M.pskey.result_message_handler.structure_found>
0x000223        F3D00000                 push rLink;
0x000224        D1620000                 r4 = M[r0 + 0];
0x000225        D5670000                 M[r5 + 0] = r4;
0x000226        D1220002                 r0 = M[r0 + 2];
0x000227        E002000F                 call r0;
0x000228        093002CD                 r1 = Null + M[$pskey.last_addr];
0x000229        E403002F                 Null = r1 + 1;
0x00022A        E110FFCF                 if NE call $pskey.private.send_request;
0x00022B        DDF000C3                 jump $pop_rLink_and_rts;

 <$message.send_short>
0x00022C        F3D00000                 push rLink;
0x00022D        E1F0009A                 call $block_interrupts;
0x00022E        FD0000FF 093032CA        r1 = Null + M[$message.queue_write_ptr];
0x000230        01230005                 r0 = r1 + 5;
0x000231        2102006E                 Null = r0 - 110;
0x000232        00200000                 if EQ r0 = Null + Null;
0x000233        290202CA                 Null = r0 - M[$message.queue_read_ptr];
0x000234        DD00000E                 if EQ jump $M.message.send_short.all_done;
0x000235        FD0000FF 192032CA        M[$message.queue_write_ptr] = r0 + Null;
0x000237        FD0000FF D5433188        M[r1 + -52856] = r2;
0x000239        FD0000FF D5533189        M[r1 + -52855] = r3;
0x00023B        FD0000FF D563318A        M[r1 + -52854] = r4;
0x00023D        FD0000FF D573318B        M[r1 + -52853] = r5;
0x00023F        FD0000FF D583318C        M[r1 + -52852] = r6;
0x000241        E1F0FEF7                 call $message.private.try_to_send_message;

 <$M.message.send_short.all_done>
0x000242        E1F00073                 call $interrupt.unblock;
0x000243        DDF000AB                 jump $pop_rLink_and_rts;

 <$timer.service_routine>
0x000244        F3D00000                 push rLink;

 <$M.timer.service_routine.search_again>
0x000245        093002CE                 r1 = Null + M[$timer.last_addr];
0x000246        E403002F                 Null = r1 + 1;
0x000247        DD000011                 if EQ jump $M.timer.service_routine.no_more_timers;
0x000248        D1230001                 r0 = M[r1 + 1];
0x000249        2942FE71                 r2 = r0 - M[0xfffe71];
0x00024A        21040000                 Null = r2 - 0;
0x00024B        DDC00008                 if GT jump $M.timer.service_routine.setup_a_new_hardware_timer;
0x00024C        D1D30002                 rLink = M[r1 + 2];
0x00024D        D1230003                 r0 = M[r1 + 3];
0x00024E        D5030003                 M[r1 + 3] = Null;
0x00024F        D1430000                 r2 = M[r1 + 0];
0x000250        194002CE                 M[$timer.last_addr] = r2 + Null;
0x000251        E00D000F                 call rLink;
0x000252        DDF0FFF3                 jump $M.timer.service_routine.search_again;

 <$M.timer.service_routine.setup_a_new_hardware_timer>
0x000253        1900FE1F                 M[0xfffe1f] = Null + Null;
0x000254        1920FE21                 M[0xfffe21] = r0 + Null;
0x000255        E450002F                 r3 = Null + 1;
0x000256        1950FE1F                 M[0xfffe1f] = r3 + Null;
0x000257        DDF00097                 jump $pop_rLink_and_rts;

 <$M.timer.service_routine.no_more_timers>
0x000258        1900FE1F                 M[0xfffe1f] = Null + Null;
0x000259        DDF00095                 jump $pop_rLink_and_rts;

 <$timer.cancel_event>
0x00025A        F3D00000                 push rLink;
0x00025B        E1F0006C                 call $block_interrupts;
0x00025C        01C00032                 r10 = Null + 50;
0x00025D        016002CE                 r4 = Null + 718;
0x00025E        092002CE                 r0 = Null + M[$timer.last_addr];
0x00025F        E5F00008                 do $M.timer.cancel_event.loop;
0x000260        E402002F                 Null = r0 + 1;
0x000261        DD000006                 if EQ jump $M.timer.cancel_event.loop;
0x000262        D1720003                 r5 = M[r0 + 3];
0x000263        2004007F                 Null = r2 - r5;
0x000264        DD000004                 if EQ jump $M.timer.cancel_event.delete_this_entry;
0x000265        0062000F                 r4 = r0 + Null;
0x000266        D1220000                 r0 = M[r0 + 0];

 <$M.timer.cancel_event.loop>
0x000267        DDF00004                 jump $M.timer.cancel_event.done;

 <$M.timer.cancel_event.delete_this_entry>
0x000268        D1320000                 r1 = M[r0 + 0];
0x000269        D5360000                 M[r4 + 0] = r1;
0x00026A        D5020003                 M[r0 + 3] = Null;

 <$M.timer.cancel_event.done>
0x00026B        E1F0004A                 call $interrupt.unblock;
0x00026C        DDF00082                 jump $pop_rLink_and_rts;

 <$cbuffer.empty_buffer>
0x00026D        F3D00000                 push rLink;
0x00026E        0052000F                 r3 = r0 + Null;
0x00026F        D802000F                 Null = SIGNDET r0;
0x000270        DD000004                 if EQ jump $M.cbuffer.empty_buffer.its_a_port;
0x000271        E1F0006B                 call $cbuffer.get_write_address_and_size;
0x000272        0032000F                 r1 = r0 + Null;
0x000273        DDF00007                 jump $M.cbuffer.empty_buffer.empty_port_loop;

 <$M.cbuffer.empty_buffer.its_a_port>
0x000274        E1F0004B                 call $cbuffer.calc_amount_data;
0x000275        00C2000F                 r10 = r0 + Null;
0x000276        0025000F                 r0 = r3 + Null;
0x000277        E1F00060                 call $cbuffer.get_read_address_and_size;
0x000278        E5F00002                 do $M.cbuffer.empty_buffer.empty_port_loop;
0x000279        D002000F                 Null = M[r0 + Null];

 <$M.cbuffer.empty_buffer.empty_port_loop>
0x00027A        0025000F                 r0 = r3 + Null;
0x00027B        E1F00066                 call $cbuffer.set_read_address;
0x00027C        DDF00072                 jump $pop_rLink_and_rts;

 <$pskey.read_key>
0x00027D        F3D00000                 push rLink;
0x00027E        E1F00049                 call $block_interrupts;
0x00027F        D5430001                 M[r1 + 1] = r2;
0x000280        D5530002                 M[r1 + 2] = r3;
0x000281        E450003F                 r3 = Null - 1;
0x000282        D5530000                 M[r1 + 0] = r3;
0x000283        012002CD                 r0 = Null + 717;

 <$M.pskey.read_key.find_end_of_list>
0x000284        0042000F                 r2 = r0 + Null;
0x000285        D1240000                 r0 = M[r2 + 0];
0x000286        E402002F                 Null = r0 + 1;
0x000287        DD10FFFD                 if NE jump $M.pskey.read_key.find_end_of_list;
0x000288        D5340000                 M[r2 + 0] = r1;
0x000289        210402CD                 Null = r2 - 717;
0x00028A        E100FF6F                 if EQ call $pskey.private.send_request;
0x00028B        E1F0002A                 call $interrupt.unblock;
0x00028C        DDF00062                 jump $pop_rLink_and_rts;

 <$cbuffer.set_write_address.its_a_port>
0x00028D        F3D00000                 push rLink;
0x00028E        8122001F                 r0 = r0 AND 0x1f;
0x00028F        2122000C                 r0 = r0 - 12;
0x000290        0900FE33                 Null = Null + M[0xfffe33];
0x000291        090002C7                 Null = Null + M[$cbuffer.auto_mcu_message];
0x000292        DD000007                 if EQ jump $M.cbuffer.set_write_address.its_a_port.dont_message_send;
0x000293        D132006E                 r1 = M[r0 + 110];
0x000294        2103F000                 Null = r1 - -4096;
0x000295        DD500004                 if POS jump $M.cbuffer.set_write_address.its_a_port.dont_message_send;
0x000296        85408003                 r2 = Null OR 0x8003;
0x000297        ED520001                 r3 = 0x1 ASHIFT r0;
0x000298        E1F0FF94                 call $message.send_short;

 <$M.cbuffer.set_write_address.its_a_port.dont_message_send>
0x000299        DDF00055                 jump $pop_rLink_and_rts;

 <$math.sqrt>
0x00029A        51800001                 M0 = Null + 1;
0x00029B        5100004A                 I0 = Null + 74;
0x00029C        D862100F                 r4 = SIGNDET r0, rMAC = M[I0,M0];
0x00029D        9032406F                 r1 = r0 ASHIFT r4, r2 = M[I0,M0];
0x00029E        DC0D0000                 if EQ rts;
0x00029F        AC43101F                 r2 = r2 + r1 * rMAC (SS), rMAC = M[I0,M0];
0x0002A0        AC13404F                 rMAC = rMAC + r1 * r2 (SS), r2 = M[I0,M0];
0x0002A1        AC43101F                 r2 = r2 + r1 * rMAC (SS), rMAC = M[I0,M0];
0x0002A2        AC13504F                 rMAC = rMAC + r1 * r2 (SS), r3 = M[I0,M0];
0x0002A3        9146007F                 r2 = r4 ASHIFT -1;
0x0002A4        6848004F                 r2 = M0 - r2;
0x0002A5        9031004F                 r1 = rMAC ASHIFT r2;
0x0002A6        81060001                 Null = r4 AND 0x1;
0x0002A7        94330051                 if NE r1 = r1 * r3 (frac);
0x0002A8        DC0D000F                 rts;

 <$cbuffer.set_read_address.its_a_port>
0x0002A9        F3D00000                 push rLink;
0x0002AA        8122001F                 r0 = r0 AND 0x1f;
0x0002AB        0900FE33                 Null = Null + M[0xfffe33];
0x0002AC        090002C7                 Null = Null + M[$cbuffer.auto_mcu_message];
0x0002AD        DD000007                 if EQ jump $M.cbuffer.set_read_address.its_a_port.dont_message_send;
0x0002AE        D1320062                 r1 = M[r0 + 98];
0x0002AF        2103F000                 Null = r1 - -4096;
0x0002B0        DD500004                 if POS jump $M.cbuffer.set_read_address.its_a_port.dont_message_send;
0x0002B1        85408002                 r2 = Null OR 0x8002;
0x0002B2        ED520001                 r3 = 0x1 ASHIFT r0;
0x0002B3        E1F0FF79                 call $message.send_short;

 <$M.cbuffer.set_read_address.its_a_port.dont_message_send>
0x0002B4        DDF0003A                 jump $pop_rLink_and_rts;

 <$interrupt.unblock>
0x0002B5        FD0000FF 092032C8        r0 = Null + M[$interrupt.block_count];
0x0002B7        E1000769                 if EQ call $error;
0x0002B8        E422003F                 r0 = r0 - 1;
0x0002B9        FD0000FF 192032C8        M[$interrupt.block_count] = r0 + Null;
0x0002BB        DC0D0001                 if NE rts;
0x0002BC        E420002F                 r0 = Null + 1;
0x0002BD        1920FE12                 M[0xfffe12] = r0 + Null;
0x0002BE        DC0D000F                 rts;

 <$cbuffer.calc_amount_data>
0x0002BF        D802000F                 Null = SIGNDET r0;
0x0002C0        DD00FF17                 if EQ jump $cbuffer.calc_amount_data.its_a_port;

 <$M.cbuffer.calc_amount_data.its_a_cbuffer>
0x0002C1        D1420000                 r2 = M[r0 + 0];
0x0002C2        D1320002                 r1 = M[r0 + 2];
0x0002C3        D1220001                 r0 = M[r0 + 1];
0x0002C4        2023002F                 r0 = r1 - r0;
0x0002C5        00220044                 if NEG r0 = r0 + r2;
0x0002C6        DC0D000F                 rts;

 <$block_interrupts>
0x0002C7        FD0000FF 092032C8        r0 = Null + M[$interrupt.block_count];
0x0002C9        E422002F                 r0 = r0 + 1;
0x0002CA        FD0000FF 192032C8        M[$interrupt.block_count] = r0 + Null;
0x0002CC        1900FE12                 M[0xfffe12] = Null + Null;
0x0002CD        03000000                 Null = Null + Null;
0x0002CE        03000000                 Null = Null + Null;
0x0002CF        DC0D000F                 rts;

 <$message.send_queue_space>
0x0002D0        092002CA                 r0 = Null + M[$message.queue_read_ptr];
0x0002D1        FD0000FF 292232CA        r0 = r0 - M[$message.queue_write_ptr];
0x0002D3        E422003F                 r0 = r0 - 1;
0x0002D4        DC0D0005                 if POS rts;
0x0002D5        0122006E                 r0 = r0 + 110;
0x0002D6        DC0D000F                 rts;

 <$cbuffer.get_read_address_and_size>
0x0002D7        D802000F                 Null = SIGNDET r0;
0x0002D8        DD00FEB4                 if EQ jump $cbuffer.get_read_address_and_size.its_a_port;

 <$M.cbuffer.get_read_address_and_size.its_a_cbuffer>
0x0002D9        D1320000                 r1 = M[r0 + 0];
0x0002DA        D1220001                 r0 = M[r0 + 1];
0x0002DB        DC0D000F                 rts;

 <$cbuffer.get_write_address_and_size>
0x0002DC        D802000F                 Null = SIGNDET r0;
0x0002DD        DD00FE85                 if EQ jump $cbuffer.get_write_address_and_size.its_a_port;

 <$M.cbuffer.get_write_address_and_size.its_a_cbuffer>
0x0002DE        D1320000                 r1 = M[r0 + 0];
0x0002DF        D1220002                 r0 = M[r0 + 2];
0x0002E0        DC0D000F                 rts;

 <$cbuffer.set_read_address>
0x0002E1        D802000F                 Null = SIGNDET r0;
0x0002E2        DD00FFC7                 if EQ jump $cbuffer.set_read_address.its_a_port;

 <$M.cbuffer.set_read_address.its_a_cbuffer>
0x0002E3        D5320001                 M[r0 + 1] = r1;
0x0002E4        DC0D000F                 rts;

 <$cbuffer.set_write_address>
0x0002E5        D802000F                 Null = SIGNDET r0;
0x0002E6        DD00FFA7                 if EQ jump $cbuffer.set_write_address.its_a_port;

 <$M.cbuffer.set_write_address.its_a_cbuffer>
0x0002E7        D5320002                 M[r0 + 2] = r1;
0x0002E8        DC0D000F                 rts;

 <$timer.schedule_event_in_period>
0x0002E9        D1230001                 r0 = M[r1 + 1];
0x0002EA        03420000                 r2 = r2 + r0;
0x0002EB        DDF0FECA                 jump $timer.schedule_event_at;

 <$timer.schedule_event_in>
0x0002EC        0944FE71                 r2 = r2 + M[0xfffe71];
0x0002ED        DDF0FEC8                 jump $timer.schedule_event_at;

 <$pop_rLink_and_rts>
0x0002EE        F3D40000                 pop rLink;
0x0002EF        DC0D000F                 rts;

 <$vee.accelerate.start>
0x0002F0        F3D00000                 push rLink;
0x0002F1        E1F0001E                 call $vee.accelerate.i2c_test;
0x0002F2        E1F0007F                 call $vee.accelerate.init;
0x0002F3        FD0000FF 01303286        r1 = Null + -52602;
0x0002F5        01404F02                 r2 = Null + 20226;
0x0002F6        0150031C                 r3 = Null + 796;
0x0002F7        E1F006DD                 call $message.register_handler;
0x0002F8        0130028C                 r1 = Null + 652;
0x0002F9        01404F03                 r2 = Null + 20227;
0x0002FA        0150032D                 r3 = Null + 813;
0x0002FB        E1F006D9                 call $message.register_handler;
0x0002FC        FD0000FF 0130328A        r1 = Null + -52598;
0x0002FE        01404F05                 r2 = Null + 20229;
0x0002FF        01500357                 r3 = Null + 855;
0x000300        E1F006D4                 call $message.register_handler;
0x000301        01300290                 r1 = Null + 656;
0x000302        01404F07                 r2 = Null + 20231;
0x000303        0150035D                 r3 = Null + 861;
0x000304        E1F006D0                 call $message.register_handler;
0x000305        FD0000FF 0130328E        r1 = Null + -52594;
0x000307        01404F08                 r2 = Null + 20232;
0x000308        01500363                 r3 = Null + 867;
0x000309        E1F006CB                 call $message.register_handler;
0x00030A        01300294                 r1 = Null + 660;
0x00030B        01404F0A                 r2 = Null + 20234;
0x00030C        0150036A                 r3 = Null + 874;
0x00030D        E1F006C7                 call $message.register_handler;
0x00030E        DDF0FFE0                 jump $pop_rLink_and_rts;

 <$vee.accelerate.i2c_test>
0x00030F        F3D00000                 push rLink;
0x000310        0120000F                 r0 = Null + 15;
0x000311        E1F00092                 call $vee.accelerate.read_reg;
0x000312        21020033                 Null = r0 - 51;
0x000313        DD100005                 if NE jump $vee.accelerate.acc_i2c_error;
0x000314        01404F25                 r2 = Null + 20261;
0x000315        01500000                 r3 = Null + 0;
0x000316        E1F0FF16                 call $message.send_short;
0x000317        DDF0FFD7                 jump $pop_rLink_and_rts;

 <$vee.accelerate.acc_i2c_error>
0x000318        01404F25                 r2 = Null + 20261;
0x000319        E450002F                 r3 = Null + 1;
0x00031A        E1F0FF12                 call $message.send_short;
0x00031B        DDF0FFD3                 jump $pop_rLink_and_rts;

 <$acc_sample_enable_cmd_from_vm>
0x00031C        F3D00000                 push rLink;
0x00031D        FD0000FF 093032B2        r1 = Null + M[$vee.accelerate.acc_sample_enable];
0x00031F        E403003F                 Null = r1 - 1;
0x000320        DD50FFCE                 if POS jump $pop_rLink_and_rts;
0x000321        E1F0FFA6                 call $block_interrupts;
0x000322        E430002F                 r1 = Null + 1;
0x000323        FD0000FF 193032B2        M[$vee.accelerate.acc_sample_enable] = r1 + Null;
0x000325        E1F0FF90                 call $interrupt.unblock;
0x000326        FD0000FF 01303292        r1 = Null + -52590;
0x000328        FD000001 014086A0        r2 = Null + 100000;
0x00032A        015003CD                 r3 = Null + 973;
0x00032B        E1F0FFC1                 call $timer.schedule_event_in;
0x00032C        DDF0FFC2                 jump $pop_rLink_and_rts;

 <$acc_sample_disable_cmd_from_vm>
0x00032D        F3D00000                 push rLink;
0x00032E        E1F0FF99                 call $block_interrupts;
0x00032F        01300000                 r1 = Null + 0;
0x000330        FD0000FF 193032B2        M[$vee.accelerate.acc_sample_enable] = r1 + Null;
0x000332        193002B3                 M[$vee.accelerate.step_value_enable] = r1 + Null;
0x000333        193002B4                 M[$vee.accelerate.neck_protect_enable] = r1 + Null;
0x000334        FD0000FF 193032B3        M[$vee.accelerate.safe_driver_enable] = r1 + Null;
0x000336        FD0000FF 193032B4        M[$vee.accelerate.const_seat_enable] = r1 + Null;
0x000338        193002B2                 M[$vee.accelerate.step_value] = r1 + Null;
0x000339        193002B5                 M[$vee.accelerate.acc_valid] = r1 + Null;
0x00033A        FD0000FF 193032B5        M[$vee.accelerate.angle_x_int] = r1 + Null;
0x00033C        193002B6                 M[$vee.accelerate.angle_y_int] = r1 + Null;
0x00033D        FD0000FF 193032B6        M[$vee.accelerate.angle_z_int] = r1 + Null;
0x00033F        193002B7                 M[$vee.accelerate.acc_axis_x] = r1 + Null;
0x000340        FD0000FF 193032B7        M[$vee.accelerate.acc_axis_y] = r1 + Null;
0x000342        193002B8                 M[$vee.accelerate.acc_axis_z] = r1 + Null;
0x000343        193002BE                 M[$vee.accelerate.neck_protect.acc_count] = r1 + Null;
0x000344        FD0000FF 193032BE        M[$vee.accelerate.neck_protect.angle_count] = r1 + Null;
0x000346        FD0000FF 193032C0        M[$vee.accelerate.neck_protect.neck_timer_enable] = r1 + Null;
0x000348        193002C1                 M[$vee.accelerate.neck_protect.neck_timer_count] = r1 + Null;
0x000349        FD0000FF 193032C1        M[$vee.accelerate.step_count.p_value] = r1 + Null;
0x00034B        193002C2                 M[$vee.accelerate.step_count.index_curr] = r1 + Null;
0x00034C        FD0000FF 193032C2        M[$vee.accelerate.step_count.status] = r1 + Null;
0x00034E        193002C3                 M[$vee.accelerate.step_count.index_max] = r1 + Null;
0x00034F        FD0000FF 193032C4        M[$vee.accelerate.step_count.min_value] = r1 + Null;
0x000351        E430002F                 r1 = Null + 1;
0x000352        193002C4                 M[$vee.accelerate.step_count.min_flag] = r1 + Null;
0x000353        FD0000FF 193032C3        M[$vee.accelerate.step_count.max_flag] = r1 + Null;
0x000355        E1F0FF60                 call $interrupt.unblock;
0x000356        DDF0FF98                 jump $pop_rLink_and_rts;

 <$step_value_enable_cmd_from_vm>
0x000357        F3D00000                 push rLink;
0x000358        E1F0FF6F                 call $block_interrupts;
0x000359        E430002F                 r1 = Null + 1;
0x00035A        193002B3                 M[$vee.accelerate.step_value_enable] = r1 + Null;
0x00035B        E1F0FF5A                 call $interrupt.unblock;
0x00035C        DDF0FF92                 jump $pop_rLink_and_rts;

 <$neck_protect_enable_cmd_from_vm>
0x00035D        F3D00000                 push rLink;
0x00035E        E1F0FF69                 call $block_interrupts;
0x00035F        E430002F                 r1 = Null + 1;
0x000360        193002B4                 M[$vee.accelerate.neck_protect_enable] = r1 + Null;
0x000361        E1F0FF54                 call $interrupt.unblock;
0x000362        DDF0FF8C                 jump $pop_rLink_and_rts;

 <$safe_driver_enable_cmd_from_vm>
0x000363        F3D00000                 push rLink;
0x000364        E1F0FF63                 call $block_interrupts;
0x000365        E430002F                 r1 = Null + 1;
0x000366        FD0000FF 193032B3        M[$vee.accelerate.safe_driver_enable] = r1 + Null;
0x000368        E1F0FF4D                 call $interrupt.unblock;
0x000369        DDF0FF85                 jump $pop_rLink_and_rts;

 <$const_seat_enable_cmd_from_vm>
0x00036A        F3D00000                 push rLink;
0x00036B        E1F0FF5C                 call $block_interrupts;
0x00036C        E430002F                 r1 = Null + 1;
0x00036D        FD0000FF 193032B4        M[$vee.accelerate.const_seat_enable] = r1 + Null;
0x00036F        E1F0FF46                 call $interrupt.unblock;
0x000370        DDF0FF7E                 jump $pop_rLink_and_rts;

 <$vee.accelerate.init>
0x000371        F3D00000                 push rLink;
0x000372        01200020                 r0 = Null + 32;
0x000373        01300027                 r1 = Null + 39;
0x000374        E1F00047                 call $vee.accelerate.write_reg;
0x000375        01200021                 r0 = Null + 33;
0x000376        01300000                 r1 = Null + 0;
0x000377        E1F00044                 call $vee.accelerate.write_reg;
0x000378        01200022                 r0 = Null + 34;
0x000379        01300000                 r1 = Null + 0;
0x00037A        E1F00041                 call $vee.accelerate.write_reg;
0x00037B        01200023                 r0 = Null + 35;
0x00037C        01300000                 r1 = Null + 0;
0x00037D        E1F0003E                 call $vee.accelerate.write_reg;
0x00037E        01200024                 r0 = Null + 36;
0x00037F        01300000                 r1 = Null + 0;
0x000380        E1F0003B                 call $vee.accelerate.write_reg;
0x000381        01200025                 r0 = Null + 37;
0x000382        01300000                 r1 = Null + 0;
0x000383        E1F00038                 call $vee.accelerate.write_reg;
0x000384        0120001F                 r0 = Null + 31;
0x000385        01300000                 r1 = Null + 0;
0x000386        E1F00035                 call $vee.accelerate.write_reg;
0x000387        0120002E                 r0 = Null + 46;
0x000388        01300000                 r1 = Null + 0;
0x000389        E1F00032                 call $vee.accelerate.write_reg;
0x00038A        01200030                 r0 = Null + 48;
0x00038B        01300000                 r1 = Null + 0;
0x00038C        E1F0002F                 call $vee.accelerate.write_reg;
0x00038D        01200032                 r0 = Null + 50;
0x00038E        01300000                 r1 = Null + 0;
0x00038F        E1F0002C                 call $vee.accelerate.write_reg;
0x000390        01200033                 r0 = Null + 51;
0x000391        01300000                 r1 = Null + 0;
0x000392        E1F00029                 call $vee.accelerate.write_reg;
0x000393        01200038                 r0 = Null + 56;
0x000394        01300000                 r1 = Null + 0;
0x000395        E1F00026                 call $vee.accelerate.write_reg;
0x000396        0120003A                 r0 = Null + 58;
0x000397        01300000                 r1 = Null + 0;
0x000398        E1F00023                 call $vee.accelerate.write_reg;
0x000399        0120003B                 r0 = Null + 59;
0x00039A        01300000                 r1 = Null + 0;
0x00039B        E1F00020                 call $vee.accelerate.write_reg;
0x00039C        0120003C                 r0 = Null + 60;
0x00039D        01300000                 r1 = Null + 0;
0x00039E        E1F0001D                 call $vee.accelerate.write_reg;
0x00039F        0120003D                 r0 = Null + 61;
0x0003A0        01300000                 r1 = Null + 0;
0x0003A1        E1F0001A                 call $vee.accelerate.write_reg;
0x0003A2        DDF0FF4C                 jump $pop_rLink_and_rts;

 <$vee.accelerate.read_reg>
0x0003A3        F3D00000                 push rLink;
0x0003A4        0092000F                 r7 = r0 + Null;
0x0003A5        E1F005BD                 call $i2c.start_bit;
0x0003A6        01200030                 r0 = Null + 48;
0x0003A7        E1F0056A                 call $i2c.send_byte;
0x0003A8        0002000F                 Null = r0 + Null;
0x0003A9        DD100010                 if NE jump $vee.accelerate.read_reg_err;
0x0003AA        0029000F                 r0 = r7 + Null;
0x0003AB        E1F00566                 call $i2c.send_byte;
0x0003AC        0002000F                 Null = r0 + Null;
0x0003AD        DD10000C                 if NE jump $vee.accelerate.read_reg_err;
0x0003AE        E1F005B4                 call $i2c.start_bit;
0x0003AF        01200031                 r0 = Null + 49;
0x0003B0        E1F00561                 call $i2c.send_byte;
0x0003B1        0002000F                 Null = r0 + Null;
0x0003B2        DD100007                 if NE jump $vee.accelerate.read_reg_err;
0x0003B3        01200000                 r0 = Null + 0;
0x0003B4        E1F00586                 call $i2c.receive_byte;
0x0003B5        00A2000F                 r8 = r0 + Null;
0x0003B6        E1F005BE                 call $i2c.stop_bit;
0x0003B7        002A000F                 r0 = r8 + Null;
0x0003B8        DDF0FF36                 jump $pop_rLink_and_rts;

 <$vee.accelerate.read_reg_err>
0x0003B9        E420003F                 r0 = Null - 1;
0x0003BA        DDF0FF34                 jump $pop_rLink_and_rts;

 <$vee.accelerate.write_reg>
0x0003BB        F3D00000                 push rLink;
0x0003BC        0092000F                 r7 = r0 + Null;
0x0003BD        00A3000F                 r8 = r1 + Null;
0x0003BE        E1F005A4                 call $i2c.start_bit;
0x0003BF        01200030                 r0 = Null + 48;
0x0003C0        E1F00551                 call $i2c.send_byte;
0x0003C1        0002000F                 Null = r0 + Null;
0x0003C2        DD10000A                 if NE jump $vee.accelerate.write_reg_err;
0x0003C3        0029000F                 r0 = r7 + Null;
0x0003C4        E1F0054D                 call $i2c.send_byte;
0x0003C5        0002000F                 Null = r0 + Null;
0x0003C6        DD100006                 if NE jump $vee.accelerate.write_reg_err;
0x0003C7        002A000F                 r0 = r8 + Null;
0x0003C8        E1F00549                 call $i2c.send_byte;
0x0003C9        0002000F                 Null = r0 + Null;
0x0003CA        DD100002                 if NE jump $vee.accelerate.write_reg_err;
0x0003CB        E1F005A9                 call $i2c.stop_bit;

 <$vee.accelerate.write_reg_err>
0x0003CC        DDF0FF22                 jump $pop_rLink_and_rts;

 <$vee.accelerate.sample_timer_handler>
0x0003CD        F3D00000                 push rLink;
0x0003CE        FD0000FF 092032B2        r0 = Null + M[$vee.accelerate.acc_sample_enable];
0x0003D0        0002000F                 Null = r0 + Null;
0x0003D1        DD00FF1D                 if EQ jump $pop_rLink_and_rts;
0x0003D2        01200027                 r0 = Null + 39;
0x0003D3        E1F0FFD0                 call $vee.accelerate.read_reg;
0x0003D4        0002000F                 Null = r0 + Null;
0x0003D5        DD40000A                 if NEG jump $vee.accelerate.no_validle_data;
0x0003D6        0002000F                 Null = r0 + Null;
0x0003D7        DD000008                 if EQ jump $vee.accelerate.no_validle_data;
0x0003D8        E1F0FEEF                 call $block_interrupts;
0x0003D9        0190007A                 r7 = Null + 122;
0x0003DA        01A00006                 r8 = Null + 6;
0x0003DB        E1F0000B                 call $vee.accelerate.read;
0x0003DC        E420002F                 r0 = Null + 1;
0x0003DD        192002B5                 M[$vee.accelerate.acc_valid] = r0 + Null;
0x0003DE        E1F0FED7                 call $interrupt.unblock;

 <$vee.accelerate.no_validle_data>
0x0003DF        FD0000FF 01303292        r1 = Null + -52590;
0x0003E1        FD000001 014086A0        r2 = Null + 100000;
0x0003E3        015003CD                 r3 = Null + 973;
0x0003E4        E1F0FF05                 call $timer.schedule_event_in_period;
0x0003E5        DDF0FF09                 jump $pop_rLink_and_rts;

 <$vee.accelerate.read>
0x0003E6        F3D00000                 push rLink;
0x0003E7        E1F0057B                 call $i2c.start_bit;
0x0003E8        01200030                 r0 = Null + 48;
0x0003E9        E1F00528                 call $i2c.send_byte;
0x0003EA        0002000F                 Null = r0 + Null;
0x0003EB        DD10000E                 if NE jump $vee.accelerate.acc_read_err;
0x0003EC        012000A8                 r0 = Null + 168;
0x0003ED        E1F00524                 call $i2c.send_byte;
0x0003EE        0002000F                 Null = r0 + Null;
0x0003EF        DD10000A                 if NE jump $vee.accelerate.acc_read_err;
0x0003F0        E1F00572                 call $i2c.start_bit;
0x0003F1        01200031                 r0 = Null + 49;
0x0003F2        E1F0051F                 call $i2c.send_byte;
0x0003F3        0002000F                 Null = r0 + Null;
0x0003F4        DD100005                 if NE jump $vee.accelerate.acc_read_err;
0x0003F5        0029000F                 r0 = r7 + Null;
0x0003F6        003A000F                 r1 = r8 + Null;
0x0003F7        E1F00012                 call $vee.accelerate.multiple_receive;
0x0003F8        E1F0057C                 call $i2c.stop_bit;

 <$vee.accelerate.acc_read_err>
0x0003F9        DDF0FEF5                 jump $pop_rLink_and_rts;

 <$vee.accelerate.multiple_send>
0x0003FA        F3D00000                 push rLink;
0x0003FB        5000002F                 I0 = Null + r0;
0x0003FC        51C00000                 L0 = Null + 0;
0x0003FD        00A3000F                 r8 = r1 + Null;

 <$vee.accelerate.send_multiple_byte>
0x0003FE        03002100                 Null = Null + Null, r0 = M[I0,1];
0x0003FF        E1F00512                 call $i2c.send_byte;
0x000400        0002000F                 Null = r0 + Null;
0x000401        DD100006                 if NE jump $vee.accelerate.multiple_send_err;
0x000402        E4AA003F                 r8 = r8 - 1;
0x000403        000A000F                 Null = r8 + Null;
0x000404        DD10FFFA                 if NE jump $vee.accelerate.send_multiple_byte;
0x000405        01200000                 r0 = Null + 0;
0x000406        DDF0FEE8                 jump $pop_rLink_and_rts;

 <$vee.accelerate.multiple_send_err>
0x000407        E420003F                 r0 = Null - 1;
0x000408        DDF0FEE6                 jump $pop_rLink_and_rts;

 <$vee.accelerate.multiple_receive>
0x000409        F3D00000                 push rLink;
0x00040A        5000002F                 I0 = Null + r0;
0x00040B        51C00000                 L0 = Null + 0;
0x00040C        E4A3003F                 r8 = r1 - 1;

 <$vee.accelerate.receive_multiple_byte>
0x00040D        E420002F                 r0 = Null + 1;
0x00040E        E1F0052C                 call $i2c.receive_byte;
0x00040F        0300A100                 Null = Null + Null, M[I0,1] = r0;
0x000410        E4AA003F                 r8 = r8 - 1;
0x000411        000A000F                 Null = r8 + Null;
0x000412        DD10FFFB                 if NE jump $vee.accelerate.receive_multiple_byte;
0x000413        01200000                 r0 = Null + 0;
0x000414        E1F00526                 call $i2c.receive_byte;
0x000415        0300A100                 Null = Null + Null, M[I0,1] = r0;
0x000416        DDF0FED8                 jump $pop_rLink_and_rts;

 <$vee.accelerate.arccos>
0x000417        F3D00000                 push rLink;
0x000418        0007000F                 Null = r5 + Null;
0x000419        DD000017                 if EQ jump $vee.accelerate.cos_vertical_angle;
0x00041A        8D77007F                 r5 = r5 LSHIFT -1;
0x00041B        FD000040 01170000        rMAC = r5 + 4194304;
0x00041D        8D210000                 r0 = rMAC LSHIFT 0;
0x00041E        FD000040 65170000        rMAC = 4194304 - r5;
0x000420        91E1007F                 rMAC = rMAC ASHIFT -1 (MI);
0x000421        D9020000                 Div = rMAC / r0;
0x000422        D9200001                 r0 = DivResult;
0x000423        E1F0FE77                 call $math.sqrt;
0x000424        D9800001                 r6 = DivResult;
0x000425        FD00007F 0170FFFF        r5 = Null + 8388607;
0x000427        E1F0FCA5                 call $atan;
0x000428        FD000000 CD170168        rMAC = r5 * 4.291534423828125e-005 (SS);
0x00042A        8D210000                 r0 = rMAC LSHIFT 0;
0x00042B        8D310018                 r1 = rMAC LSHIFT 24;
0x00042C        8D33007F                 r1 = r1 LSHIFT -1;
0x00042D        000B000F                 Null = r9 + Null;
0x00042E        20200021                 if NE r0 = Null - r0;
0x00042F        DDF0FEBF                 jump $pop_rLink_and_rts;

 <$vee.accelerate.cos_vertical_angle>
0x000430        FD0000FF 094032B6        r2 = Null + M[$vee.accelerate.angle_z_int];
0x000432        0150005A                 r3 = Null + 90;
0x000433        0160FFA6                 r4 = Null + -90;
0x000434        0004000F                 Null = r2 + Null;
0x000435        00260004                 if NEG r0 = r4 + Null;
0x000436        0004000F                 Null = r2 + Null;
0x000437        00250005                 if POS r0 = r3 + Null;
0x000438        01300000                 r1 = Null + 0;
0x000439        DDF0FEB5                 jump $pop_rLink_and_rts;

 <$vee.accelerate.arcsin>
0x00043A        F3D00000                 push rLink;
0x00043B        0007000F                 Null = r5 + Null;
0x00043C        DD000014                 if EQ jump $vee.accelerate.sin_zero_angle;
0x00043D        9437007F                 r1 = r5 * r5 (frac);
0x00043E        FD00007F 6513FFFF        rMAC = 8388607 - r1;
0x000440        8D210000                 r0 = rMAC LSHIFT 0;
0x000441        E1F0FE59                 call $math.sqrt;
0x000442        FD00007F 6513FFFF        rMAC = 8388607 - r1;
0x000444        91E1007F                 rMAC = rMAC ASHIFT -1 (MI);
0x000445        D9070000                 Div = rMAC / r5;
0x000446        D9800001                 r6 = DivResult;
0x000447        FD00007F 0170FFFF        r5 = Null + 8388607;
0x000449        E1F0FC83                 call $atan;
0x00044A        FD000000 CD170168        rMAC = r5 * 4.291534423828125e-005 (SS);
0x00044C        8D210000                 r0 = rMAC LSHIFT 0;
0x00044D        8D310018                 r1 = rMAC LSHIFT 24;
0x00044E        8D33007F                 r1 = r1 LSHIFT -1;
0x00044F        DDF0FE9F                 jump $pop_rLink_and_rts;

 <$vee.accelerate.sin_zero_angle>
0x000450        01200000                 r0 = Null + 0;
0x000451        01300000                 r1 = Null + 0;
0x000452        DDF0FE9C                 jump $pop_rLink_and_rts;

 <$vee.accelerate.angle_calc>
0x000453        F3D00000                 push rLink;
0x000454        0120007A                 r0 = Null + 122;
0x000455        01300006                 r1 = Null + 6;
0x000456        5000002F                 I0 = Null + r0;
0x000457        51C00000                 L0 = Null + 0;
0x000458        FD0000FF 51403278        I4 = Null + -52616;
0x00045A        51E00000                 L4 = Null + 0;
0x00045B        00C3000F                 r10 = r1 + Null;
0x00045C        092002B5                 r0 = Null + M[$vee.accelerate.acc_valid];
0x00045D        0002000F                 Null = r0 + Null;
0x00045E        DD00FE90                 if EQ jump $pop_rLink_and_rts;
0x00045F        E1F0FE68                 call $block_interrupts;
0x000460        E5F00003                 do $vee.accelerate.copy_acc_data;
0x000461        03003100                 Null = Null + Null, r1 = M[I0,1];
0x000462        030000B1                 Null = Null + Null, M[I4,1] = r1;

 <$vee.accelerate.copy_acc_data>
0x000463        E1F0FE52                 call $interrupt.unblock;
0x000464        FD0000FF 09303278        r1 = Null + M[$vee.accelerate.acc_calc_buf];
0x000466        FD0000FF 09403279        r2 = Null + M[0xff3279];
0x000468        8D440008                 r2 = r2 LSHIFT 8;
0x000469        0023004F                 r0 = r1 + r2;
0x00046A        E1F0002A                 call $vee.accelerate.get_acc;
0x00046B        192002B7                 M[$vee.accelerate.acc_axis_x] = r0 + Null;
0x00046C        FD0000FF 0930327A        r1 = Null + M[0xff327a];
0x00046E        FD0000FF 0940327B        r2 = Null + M[0xff327b];
0x000470        8D440008                 r2 = r2 LSHIFT 8;
0x000471        0023004F                 r0 = r1 + r2;
0x000472        E1F00022                 call $vee.accelerate.get_acc;
0x000473        FD0000FF 192032B7        M[$vee.accelerate.acc_axis_y] = r0 + Null;
0x000475        FD0000FF 0930327C        r1 = Null + M[0xff327c];
0x000477        FD0000FF 0940327D        r2 = Null + M[0xff327d];
0x000479        8D440008                 r2 = r2 LSHIFT 8;
0x00047A        0023004F                 r0 = r1 + r2;
0x00047B        E1F00019                 call $vee.accelerate.get_acc;
0x00047C        192002B8                 M[$vee.accelerate.acc_axis_z] = r0 + Null;
0x00047D        E1F0FE4A                 call $block_interrupts;
0x00047E        01200000                 r0 = Null + 0;
0x00047F        192002B5                 M[$vee.accelerate.acc_valid] = r0 + Null;
0x000480        E1F0FE35                 call $interrupt.unblock;
0x000481        092002B3                 r0 = Null + M[$vee.accelerate.step_value_enable];
0x000482        0002000F                 Null = r0 + Null;
0x000483        DD000002                 if EQ jump $vee.accelerate.dont_output_step_value;
0x000484        E1F0041E                 call $vee.accelerate.step_count;

 <$vee.accelerate.dont_output_step_value>
0x000485        FD0000FF 092032B3        r0 = Null + M[$vee.accelerate.safe_driver_enable];
0x000487        0002000F                 Null = r0 + Null;
0x000488        DD000002                 if EQ jump $vee.accelerate.dont_output_safe_driver_event;
0x000489        E1F00463                 call $vee.accelerate.safe_driver;

 <$vee.accelerate.dont_output_safe_driver_event>
0x00048A        092002B4                 r0 = Null + M[$vee.accelerate.neck_protect_enable];
0x00048B        0002000F                 Null = r0 + Null;
0x00048C        DD000002                 if EQ jump $vee.accelerate.dont_output_neck_prompt_event;
0x00048D        E1F00223                 call $vee.accelerate.neck_protect;

 <$vee.accelerate.dont_output_neck_prompt_event>
0x00048E        FD0000FF 092032B4        r0 = Null + M[$vee.accelerate.const_seat_enable];
0x000490        0002000F                 Null = r0 + Null;
0x000491        DD000002                 if EQ jump $vee.accelerate.dont_output_seat_prompt_event;
0x000492        E1F002D6                 call $vee.accelerate.const_seat;

 <$vee.accelerate.dont_output_seat_prompt_event>
0x000493        DDF0FE5B                 jump $pop_rLink_and_rts;

 <$vee.accelerate.get_acc>
0x000494        F3D00000                 push rLink;
0x000495        FD0000FF 01300000        r1 = Null + -65536;
0x000497        81428000                 r2 = r0 AND 0x8000;
0x000498        0004000F                 Null = r2 + Null;
0x000499        84220031                 if NE r0 = r0 OR r1;
0x00049A        9922000A                 r0 = r0 * 10 (int);
0x00049B        CD120002                 rMAC = r0 * 6.103515625e-005 (SS);
0x00049C        8D210000                 r0 = rMAC LSHIFT 0;
0x00049D        DDF0FE51                 jump $pop_rLink_and_rts;

 <$vee.heartrate.start>
0x00049E        F3D00000                 push rLink;
0x00049F        E1F00013                 call $vee.heartrate.i2c_test;
0x0004A0        013000F9                 r1 = Null + 249;
0x0004A1        01404F00                 r2 = Null + 20224;
0x0004A2        015004E3                 r3 = Null + 1251;
0x0004A3        E1F00531                 call $message.register_handler;
0x0004A4        01300280                 r1 = Null + 640;
0x0004A5        01404F01                 r2 = Null + 20225;
0x0004A6        015004F2                 r3 = Null + 1266;
0x0004A7        E1F0052D                 call $message.register_handler;
0x0004A8        FD0000FF 0130327E        r1 = Null + -52610;
0x0004AA        01404F06                 r2 = Null + 20230;
0x0004AB        015004FA                 r3 = Null + 1274;
0x0004AC        E1F00528                 call $message.register_handler;
0x0004AD        01300284                 r1 = Null + 644;
0x0004AE        01404F09                 r2 = Null + 20233;
0x0004AF        0150089A                 r3 = Null + 2202;
0x0004B0        E1F00524                 call $message.register_handler;
0x0004B1        DDF0FE3D                 jump $pop_rLink_and_rts;

 <$vee.heartrate.i2c_test>
0x0004B2        F3D00000                 push rLink;
0x0004B3        E1F004AF                 call $i2c.start_bit;
0x0004B4        01200090                 r0 = Null + 144;
0x0004B5        E1F0045C                 call $i2c.send_byte;
0x0004B6        0002000F                 Null = r0 + Null;
0x0004B7        DD100028                 if NE jump $vee.heartrate.i2c_test_err;
0x0004B8        E420002F                 r0 = Null + 1;
0x0004B9        E1F00458                 call $i2c.send_byte;
0x0004BA        0002000F                 Null = r0 + Null;
0x0004BB        DD100024                 if NE jump $vee.heartrate.i2c_test_err;
0x0004BC        01200085                 r0 = Null + 133;
0x0004BD        E1F00454                 call $i2c.send_byte;
0x0004BE        0002000F                 Null = r0 + Null;
0x0004BF        DD100020                 if NE jump $vee.heartrate.i2c_test_err;
0x0004C0        01200083                 r0 = Null + 131;
0x0004C1        E1F00450                 call $i2c.send_byte;
0x0004C2        0002000F                 Null = r0 + Null;
0x0004C3        DD10001C                 if NE jump $vee.heartrate.i2c_test_err;
0x0004C4        E1F004B0                 call $i2c.stop_bit;
0x0004C5        E1F0049D                 call $i2c.start_bit;
0x0004C6        01200090                 r0 = Null + 144;
0x0004C7        E1F0044A                 call $i2c.send_byte;
0x0004C8        0002000F                 Null = r0 + Null;
0x0004C9        DD100016                 if NE jump $vee.heartrate.i2c_test_err;
0x0004CA        E420002F                 r0 = Null + 1;
0x0004CB        E1F00446                 call $i2c.send_byte;
0x0004CC        0002000F                 Null = r0 + Null;
0x0004CD        DD100012                 if NE jump $vee.heartrate.i2c_test_err;
0x0004CE        E1F004A6                 call $i2c.stop_bit;
0x0004CF        E1F00493                 call $i2c.start_bit;
0x0004D0        01200091                 r0 = Null + 145;
0x0004D1        E1F00440                 call $i2c.send_byte;
0x0004D2        0002000F                 Null = r0 + Null;
0x0004D3        DD10000C                 if NE jump $vee.heartrate.i2c_test_err;
0x0004D4        E420002F                 r0 = Null + 1;
0x0004D5        E1F00465                 call $i2c.receive_byte;
0x0004D6        E420002F                 r0 = Null + 1;
0x0004D7        E1F00463                 call $i2c.receive_byte;
0x0004D8        21020083                 Null = r0 - 131;
0x0004D9        DD100006                 if NE jump $vee.heartrate.i2c_test_err;
0x0004DA        E1F0049A                 call $i2c.stop_bit;
0x0004DB        01404F24                 r2 = Null + 20260;
0x0004DC        01500000                 r3 = Null + 0;
0x0004DD        E1F0FD4F                 call $message.send_short;
0x0004DE        DDF0FE10                 jump $pop_rLink_and_rts;

 <$vee.heartrate.i2c_test_err>
0x0004DF        01404F24                 r2 = Null + 20260;
0x0004E0        E450002F                 r3 = Null + 1;
0x0004E1        E1F0FD4B                 call $message.send_short;
0x0004E2        DDF0FE0C                 jump $pop_rLink_and_rts;

 <$hb_enable_cmd_from_vm>
0x0004E3        F3D00000                 push rLink;
0x0004E4        FD0000FF 093032A9        r1 = Null + M[$vee.heartrate.hb_sample_enable];
0x0004E6        E403003F                 Null = r1 - 1;
0x0004E7        DD50FE07                 if POS jump $pop_rLink_and_rts;
0x0004E8        E430002F                 r1 = Null + 1;
0x0004E9        FD0000FF 193032A9        M[$vee.heartrate.hb_sample_enable] = r1 + Null;
0x0004EB        FD0000FF 01303282        r1 = Null + -52606;
0x0004ED        FD000000 0140C350        r2 = Null + 50000;
0x0004EF        01500515                 r3 = Null + 1301;
0x0004F0        E1F0FDFC                 call $timer.schedule_event_in;
0x0004F1        DDF0FDFD                 jump $pop_rLink_and_rts;

 <$hb_disable_cmd_from_vm>
0x0004F2        F3D00000                 push rLink;
0x0004F3        E1F0FDD4                 call $block_interrupts;
0x0004F4        01300000                 r1 = Null + 0;
0x0004F5        FD0000FF 193032A9        M[$vee.heartrate.hb_sample_enable] = r1 + Null;
0x0004F7        193002AA                 M[$vee.heartrate.hb_time_enable] = r1 + Null;
0x0004F8        E1F0FDBD                 call $interrupt.unblock;
0x0004F9        DDF0FDF5                 jump $pop_rLink_and_rts;

 <$time_value_cmd_from_vm>
0x0004FA        F3D00000                 push rLink;
0x0004FB        093002AA                 r1 = Null + M[$vee.heartrate.hb_time_enable];
0x0004FC        E403003F                 Null = r1 - 1;
0x0004FD        DD50FDF1                 if POS jump $pop_rLink_and_rts;
0x0004FE        E430002F                 r1 = Null + 1;
0x0004FF        193002AA                 M[$vee.heartrate.hb_time_enable] = r1 + Null;
0x000500        01300288                 r1 = Null + 648;
0x000501        FD00000F 01404240        r2 = Null + 1000000;
0x000503        01500506                 r3 = Null + 1286;
0x000504        E1F0FDE8                 call $timer.schedule_event_in;
0x000505        DDF0FDE9                 jump $pop_rLink_and_rts;

 <$vee.heartrate.sport_time_timer_handler>
0x000506        F3D00000                 push rLink;
0x000507        092002AA                 r0 = Null + M[$vee.heartrate.hb_time_enable];
0x000508        0002000F                 Null = r0 + Null;
0x000509        DD00FDE5                 if EQ jump $pop_rLink_and_rts;
0x00050A        E1F0FDBD                 call $block_interrupts;
0x00050B        093002AB                 r1 = Null + M[$vee.heartrate.time_value];
0x00050C        E433002F                 r1 = r1 + 1;
0x00050D        193002AB                 M[$vee.heartrate.time_value] = r1 + Null;
0x00050E        E1F0FDA7                 call $interrupt.unblock;
0x00050F        01300288                 r1 = Null + 648;
0x000510        FD00000F 01404240        r2 = Null + 1000000;
0x000512        01500506                 r3 = Null + 1286;
0x000513        E1F0FDD9                 call $timer.schedule_event_in;
0x000514        DDF0FDDA                 jump $pop_rLink_and_rts;

 <$vee.heartrate.sample_timer_handler>
0x000515        F3D00000                 push rLink;
0x000516        FD0000FF 092032A9        r0 = Null + M[$vee.heartrate.hb_sample_enable];
0x000518        0002000F                 Null = r0 + Null;
0x000519        DD00FDD5                 if EQ jump $pop_rLink_and_rts;
0x00051A        E1F00010                 call $vee.heartratevalue.read;
0x00051B        0005000F                 Null = r3 + Null;
0x00051C        DD400007                 if NEG jump $vee.heartrate.vee_heartrate_sample_ret;
0x00051D        E1F00070                 call $vee.heartrate.input;
0x00051E        012000FD                 r0 = Null + 253;
0x00051F        E1F0FDA0                 call $cbuffer.calc_amount_data;
0x000520        21020078                 Null = r0 - 120;
0x000521        DD400002                 if NEG jump $vee.heartrate.vee_heartrate_sample_ret;
0x000522        E1F0003C                 call $vee.heartrate.sample_copy;

 <$vee.heartrate.vee_heartrate_sample_ret>
0x000523        FD0000FF 01303282        r1 = Null + -52606;
0x000525        FD000000 0140C350        r2 = Null + 50000;
0x000527        01500515                 r3 = Null + 1301;
0x000528        E1F0FDC1                 call $timer.schedule_event_in_period;
0x000529        DDF0FDC5                 jump $pop_rLink_and_rts;

 <$vee.heartratevalue.read>
0x00052A        F3D00000                 push rLink;
0x00052B        E1F00437                 call $i2c.start_bit;
0x00052C        01200090                 r0 = Null + 144;
0x00052D        E1F003E4                 call $i2c.send_byte;
0x00052E        0002000F                 Null = r0 + Null;
0x00052F        DD10002D                 if NE jump $vee.heartrate.send_err;
0x000530        E420002F                 r0 = Null + 1;
0x000531        E1F003E0                 call $i2c.send_byte;
0x000532        0002000F                 Null = r0 + Null;
0x000533        DD100029                 if NE jump $vee.heartrate.send_err;
0x000534        01200085                 r0 = Null + 133;
0x000535        E1F003DC                 call $i2c.send_byte;
0x000536        0002000F                 Null = r0 + Null;
0x000537        DD100025                 if NE jump $vee.heartrate.send_err;
0x000538        01200083                 r0 = Null + 131;
0x000539        E1F003D8                 call $i2c.send_byte;
0x00053A        0002000F                 Null = r0 + Null;
0x00053B        DD100021                 if NE jump $vee.heartrate.send_err;
0x00053C        E1F00438                 call $i2c.stop_bit;
0x00053D        E1F00425                 call $i2c.start_bit;
0x00053E        01200090                 r0 = Null + 144;
0x00053F        E1F003D2                 call $i2c.send_byte;
0x000540        0002000F                 Null = r0 + Null;
0x000541        DD10001B                 if NE jump $vee.heartrate.send_err;
0x000542        01200000                 r0 = Null + 0;
0x000543        E1F003CE                 call $i2c.send_byte;
0x000544        0002000F                 Null = r0 + Null;
0x000545        DD100017                 if NE jump $vee.heartrate.send_err;
0x000546        E1F0042E                 call $i2c.stop_bit;
0x000547        E1F0041B                 call $i2c.start_bit;
0x000548        01200091                 r0 = Null + 145;
0x000549        E1F003C8                 call $i2c.send_byte;
0x00054A        0002000F                 Null = r0 + Null;
0x00054B        DD100011                 if NE jump $vee.heartrate.send_err;
0x00054C        E420002F                 r0 = Null + 1;
0x00054D        E1F003ED                 call $i2c.receive_byte;
0x00054E        192002AC                 M[$vee.heartrate.value_msb] = r0 + Null;
0x00054F        E420002F                 r0 = Null + 1;
0x000550        E1F003EA                 call $i2c.receive_byte;
0x000551        FD0000FF 192032AB        M[$vee.heartrate.value_lsb] = r0 + Null;
0x000553        E1F00421                 call $i2c.stop_bit;
0x000554        093002AC                 r1 = Null + M[$vee.heartrate.value_msb];
0x000555        91330008                 r1 = r1 ASHIFT 8;
0x000556        FD0000FF 095332AB        r3 = r1 + M[$vee.heartrate.value_lsb];
0x000558        8D55007C                 r3 = r3 LSHIFT -4;
0x000559        210507FF                 Null = r3 - 2047;
0x00055A        00500005                 if POS r3 = Null + Null;
0x00055B        DDF0FD93                 jump $pop_rLink_and_rts;

 <$vee.heartrate.send_err>
0x00055C        E450003F                 r3 = Null - 1;
0x00055D        DDF0FD91                 jump $pop_rLink_and_rts;

 <$vee.heartrate.sample_copy>
0x00055E        F3D00000                 push rLink;
0x00055F        012000FD                 r0 = Null + 253;
0x000560        E1F0FD77                 call $cbuffer.get_read_address_and_size;
0x000561        5000002F                 I0 = Null + r0;
0x000562        50C0003F                 L0 = Null + r1;
0x000563        FD0000FF 012032A6        r0 = Null + -52570;
0x000565        E1F0FD77                 call $cbuffer.get_write_address_and_size;
0x000566        5040002F                 I4 = Null + r0;
0x000567        50E0003F                 L4 = Null + r1;
0x000568        01C00078                 r10 = Null + 120;
0x000569        E5F00003                 do $vee.heartrate.cbuf_copy;
0x00056A        03003100                 Null = Null + Null, r1 = M[I0,1];
0x00056B        030000B1                 Null = Null + Null, M[I4,1] = r1;

 <$vee.heartrate.cbuf_copy>
0x00056C        FD0000FF 012032A6        r0 = Null + -52570;
0x00056E        4430004F                 r1 = Null + I4;
0x00056F        E1F0FD76                 call $cbuffer.set_write_address;
0x000570        51C00000                 L0 = Null + 0;
0x000571        012000FD                 r0 = Null + 253;
0x000572        E1F0FD65                 call $cbuffer.get_read_address_and_size;
0x000573        5000002F                 I0 = Null + r0;
0x000574        50C0003F                 L0 = Null + r1;
0x000575        01C00014                 r10 = Null + 20;
0x000576        E5F00002                 do $vee.heartrate.move_read_address;
0x000577        03003100                 Null = Null + Null, r1 = M[I0,1];

 <$vee.heartrate.move_read_address>
0x000578        012000FD                 r0 = Null + 253;
0x000579        4430000F                 r1 = Null + I0;
0x00057A        E1F0FD67                 call $cbuffer.set_read_address;
0x00057B        51C00000                 L0 = Null + 0;
0x00057C        DDF0FD72                 jump $pop_rLink_and_rts;

 <$vee.heartrate.calc_cbuffer_copy>
0x00057D        F3D00000                 push rLink;
0x00057E        FD0000FF 012032A6        r0 = Null + -52570;
0x000580        E1F0FD57                 call $cbuffer.get_read_address_and_size;
0x000581        5000002F                 I0 = Null + r0;
0x000582        50C0003F                 L0 = Null + r1;
0x000583        51400179                 I4 = Null + 377;
0x000584        51E00000                 L4 = Null + 0;
0x000585        01C00078                 r10 = Null + 120;
0x000586        E5F00003                 do $vee.heartrate.calc_cbuffer_copy1;
0x000587        03003100                 Null = Null + Null, r1 = M[I0,1];
0x000588        030000B1                 Null = Null + Null, M[I4,1] = r1;

 <$vee.heartrate.calc_cbuffer_copy1>
0x000589        FD0000FF 012032A6        r0 = Null + -52570;
0x00058B        E1F0FCE2                 call $cbuffer.empty_buffer;
0x00058C        DDF0FD62                 jump $pop_rLink_and_rts;

 <$vee.heartrate.input>
0x00058D        F3D00000                 push rLink;
0x00058E        012000FD                 r0 = Null + 253;
0x00058F        E1F0FD4D                 call $cbuffer.get_write_address_and_size;
0x000590        5000002F                 I0 = Null + r0;
0x000591        50C0003F                 L0 = Null + r1;
0x000592        0025000F                 r0 = r3 + Null;
0x000593        0300A100                 Null = Null + Null, M[I0,1] = r0;
0x000594        012000FD                 r0 = Null + 253;
0x000595        4430000F                 r1 = Null + I0;
0x000596        E1F0FD4F                 call $cbuffer.set_write_address;
0x000597        51C00000                 L0 = Null + 0;
0x000598        DDF0FD56                 jump $pop_rLink_and_rts;

 <$vee.heartrate.average_hb>
0x000599        F3D00000                 push rLink;
0x00059A        01400032                 r2 = Null + 50;
0x00059B        9B240000                 r0 = r0 * r2 (int);
0x00059C        91E20080                 rMAC = r0 ASHIFT 0 (LO);
0x00059D        D9030000                 Div = rMAC / r1;
0x00059E        D9300001                 r1 = DivResult;
0x00059F        FD000000 0140EA60        r2 = Null + 60000;
0x0005A1        91E40080                 rMAC = r2 ASHIFT 0 (LO);
0x0005A2        D9030000                 Div = rMAC / r1;
0x0005A3        D9200001                 r0 = DivResult;
0x0005A4        21020032                 Null = r0 - 50;
0x0005A5        00200004                 if NEG r0 = Null + Null;
0x0005A6        21020096                 Null = r0 - 150;
0x0005A7        00200005                 if POS r0 = Null + Null;
0x0005A8        DDF0FD46                 jump $pop_rLink_and_rts;

 <$vee.heartrate.calc>
0x0005A9        F3D00000                 push rLink;
0x0005AA        E1F0FD1D                 call $block_interrupts;
0x0005AB        FD0000FF 012032A6        r0 = Null + -52570;
0x0005AD        E1F0FD12                 call $cbuffer.calc_amount_data;
0x0005AE        21020078                 Null = r0 - 120;
0x0005AF        DD400011                 if NEG jump $vee.heartrate.do_not_calc;
0x0005B0        E1F0FD05                 call $interrupt.unblock;
0x0005B1        E1F0FFCC                 call $vee.heartrate.calc_cbuffer_copy;
0x0005B2        01200179                 r0 = Null + 377;
0x0005B3        01300078                 r1 = Null + 120;
0x0005B4        E1F0002F                 call $vee.heartrate.hb_calc;
0x0005B5        E1F00257                 call $vee.heartrate.hb_smooth;
0x0005B6        E1F0001A                 call $vee.heartrate.output;
0x0005B7        FD0000FF 01203226        r0 = Null + -52698;
0x0005B9        01300012                 r1 = Null + 18;
0x0005BA        E1F00008                 call $vee.heartrate.zero_buff;
0x0005BB        FD0000FF 01203238        r0 = Null + -52680;
0x0005BD        01300012                 r1 = Null + 18;
0x0005BE        E1F00004                 call $vee.heartrate.zero_buff;
0x0005BF        DDF0FD2F                 jump $pop_rLink_and_rts;

 <$vee.heartrate.do_not_calc>
0x0005C0        E1F0FCF5                 call $interrupt.unblock;
0x0005C1        DDF0FD2D                 jump $pop_rLink_and_rts;

 <$vee.heartrate.zero_buff>
0x0005C2        F3D00000                 push rLink;
0x0005C3        00C3000F                 r10 = r1 + Null;
0x0005C4        5000002F                 I0 = Null + r0;
0x0005C5        51C00000                 L0 = Null + 0;
0x0005C6        01200000                 r0 = Null + 0;
0x0005C7        E5F00002                 do $vee.heartrate.vee_zero_buff;
0x0005C8        0300A100                 Null = Null + Null, M[I0,1] = r0;

 <$vee.heartrate.vee_zero_buff>
0x0005C9        DDF0FD25                 jump $pop_rLink_and_rts;

 <$vee.heartrate.test_output>
0x0005CA        F3D00000                 push rLink;
0x0005CB        01504087                 r3 = Null + 16519;
0x0005CC        0063000F                 r4 = r1 + Null;
0x0005CD        0072000F                 r5 = r0 + Null;
0x0005CE        E1F0FB3B                 call $message.send_long;
0x0005CF        DDF0FD1F                 jump $pop_rLink_and_rts;

 <$vee.heartrate.output>
0x0005D0        F3D00000                 push rLink;
0x0005D1        FD0000FF 095032AA        r3 = Null + M[$vee.heartrate.heartrate];
0x0005D3        FD0000FF 093032B2        r1 = Null + M[$vee.accelerate.acc_sample_enable];
0x0005D5        E403003F                 Null = r1 - 1;
0x0005D6        DD000004                 if EQ jump $vee.heartrate.sport_data_output;
0x0005D7        01404F20                 r2 = Null + 20256;
0x0005D8        E1F0FC54                 call $message.send_short;
0x0005D9        DDF0FD15                 jump $pop_rLink_and_rts;

 <$vee.heartrate.sport_data_output>
0x0005DA        01404F21                 r2 = Null + 20257;
0x0005DB        096002B2                 r4 = Null + M[$vee.accelerate.step_value];
0x0005DC        E1F0FCEB                 call $block_interrupts;
0x0005DD        01800000                 r6 = Null + 0;
0x0005DE        198002B2                 M[$vee.accelerate.step_value] = r6 + Null;
0x0005DF        E1F0FCD6                 call $interrupt.unblock;
0x0005E0        097002AB                 r5 = Null + M[$vee.heartrate.time_value];
0x0005E1        E1F0FC4B                 call $message.send_short;
0x0005E2        DDF0FD0C                 jump $pop_rLink_and_rts;

 <$vee.heartrate.hb_calc>
0x0005E3        F3D00000                 push rLink;
0x0005E4        01500000                 r3 = Null + 0;
0x0005E5        FD0000FF 195032AC        M[$vee.heartrate.hb_calc.status] = r3 + Null;
0x0005E7        195002AF                 M[$vee.heartrate.hb_calc.max_value] = r3 + Null;
0x0005E8        E450002F                 r3 = Null + 1;
0x0005E9        195002AD                 M[$vee.heartrate.hb_calc.max_flag] = r3 + Null;
0x0005EA        FD0000FF 195032AD        M[$vee.heartrate.hb_calc.min_flag] = r3 + Null;
0x0005EC        015007D0                 r3 = Null + 2000;
0x0005ED        FD0000FF 195032AF        M[$vee.heartrate.hb_calc.min_value] = r3 + Null;
0x0005EF        01500008                 r3 = Null + 8;
0x0005F0        2050005F                 r3 = Null - r3;
0x0005F1        195002AE                 M[$vee.heartrate.hb_calc.max_index] = r3 + Null;
0x0005F2        FD0000FF 195032AE        M[$vee.heartrate.hb_calc.min_index] = r3 + Null;
0x0005F4        5000002F                 I0 = Null + r0;
0x0005F5        51C00000                 L0 = Null + 0;
0x0005F6        E4C3003F                 r10 = r1 - 1;
0x0005F7        01200000                 r0 = Null + 0;
0x0005F8        03003100                 Null = Null + Null, r1 = M[I0,1];
0x0005F9        01400000                 r2 = Null + 0;
0x0005FA        01500000                 r3 = Null + 0;
0x0005FB        01800000                 r6 = Null + 0;
0x0005FC        01600000                 r4 = Null + 0;
0x0005FD        01700000                 r5 = Null + 0;

 <$vee.heartrate.hb_calc.hb_calc_loop>
0x0005FE        03002100                 Null = Null + Null, r0 = M[I0,1];
0x0005FF        E444002F                 r2 = r2 + 1;
0x000600        2002003F                 Null = r0 - r1;
0x000601        DD400004                 if NEG jump $vee.heartrate.hb_calc.hb_check_max_value;
0x000602        2003002F                 Null = r1 - r0;
0x000603        DD400034                 if NEG jump $vee.heartrate.hb_calc.hb_check_min_value;
0x000604        DDF0005D                 jump $vee.heartrate.hb_calc.hb_continue_check;

 <$vee.heartrate.hb_calc.hb_check_max_value>
0x000605        FD0000FF 095032AC        r3 = Null + M[$vee.heartrate.hb_calc.status];
0x000607        0005000F                 Null = r3 + Null;
0x000608        DD100059                 if NE jump $vee.heartrate.hb_calc.hb_continue_check;
0x000609        E450002F                 r3 = Null + 1;
0x00060A        FD0000FF 195032AC        M[$vee.heartrate.hb_calc.status] = r3 + Null;
0x00060C        FD0000FF 095032AD        r3 = Null + M[$vee.heartrate.hb_calc.min_flag];
0x00060E        0005000F                 Null = r3 + Null;
0x00060F        DD000017                 if EQ jump $vee.heartrate.hb_calc.hb_update_max_value;
0x000610        FD0000FF 095032AE        r3 = Null + M[$vee.heartrate.hb_calc.min_index];
0x000612        2054005F                 r3 = r2 - r3;
0x000613        21050002                 Null = r3 - 2;
0x000614        DD40004D                 if NEG jump $vee.heartrate.hb_calc.hb_continue_check;
0x000615        095002AE                 r3 = Null + M[$vee.heartrate.hb_calc.max_index];
0x000616        2054005F                 r3 = r2 - r3;
0x000617        21050008                 Null = r3 - 8;
0x000618        DD400049                 if NEG jump $vee.heartrate.hb_calc.hb_continue_check;
0x000619        01500000                 r3 = Null + 0;
0x00061A        FD0000FF 195032AD        M[$vee.heartrate.hb_calc.min_flag] = r3 + Null;
0x00061C        E450002F                 r3 = Null + 1;
0x00061D        195002AD                 M[$vee.heartrate.hb_calc.max_flag] = r3 + Null;
0x00061E        096002AE                 r4 = Null + M[$vee.heartrate.hb_calc.max_index];
0x00061F        2064006F                 r4 = r2 - r4;
0x000620        FD0000FF D5673226        M[r5 + -52698] = r4;
0x000622        194002AE                 M[$vee.heartrate.hb_calc.max_index] = r2 + Null;
0x000623        193002AF                 M[$vee.heartrate.hb_calc.max_value] = r1 + Null;
0x000624        E477002F                 r5 = r5 + 1;
0x000625        DDF0003C                 jump $vee.heartrate.hb_calc.hb_continue_check;

 <$vee.heartrate.hb_calc.hb_update_max_value>
0x000626        095002AF                 r3 = Null + M[$vee.heartrate.hb_calc.max_value];
0x000627        2005003F                 Null = r3 - r1;
0x000628        DD500039                 if POS jump $vee.heartrate.hb_calc.hb_continue_check;
0x000629        095002AE                 r3 = Null + M[$vee.heartrate.hb_calc.max_index];
0x00062A        2054005F                 r3 = r2 - r3;
0x00062B        21050008                 Null = r3 - 8;
0x00062C        DD500035                 if POS jump $vee.heartrate.hb_calc.hb_continue_check;
0x00062D        E477003F                 r5 = r5 - 1;
0x00062E        FD0000FF D1673226        r4 = M[r5 + -52698];
0x000630        03650000                 r4 = r4 + r3;
0x000631        FD0000FF D5673226        M[r5 + -52698] = r4;
0x000633        E477002F                 r5 = r5 + 1;
0x000634        194002AE                 M[$vee.heartrate.hb_calc.max_index] = r2 + Null;
0x000635        193002AF                 M[$vee.heartrate.hb_calc.max_value] = r1 + Null;
0x000636        DDF0002B                 jump $vee.heartrate.hb_calc.hb_continue_check;

 <$vee.heartrate.hb_calc.hb_check_min_value>
0x000637        FD0000FF 095032AC        r3 = Null + M[$vee.heartrate.hb_calc.status];
0x000639        0005000F                 Null = r3 + Null;
0x00063A        DD000027                 if EQ jump $vee.heartrate.hb_calc.hb_continue_check;
0x00063B        01500000                 r3 = Null + 0;
0x00063C        FD0000FF 195032AC        M[$vee.heartrate.hb_calc.status] = r3 + Null;
0x00063E        095002AD                 r3 = Null + M[$vee.heartrate.hb_calc.max_flag];
0x00063F        0005000F                 Null = r3 + Null;
0x000640        DD000014                 if EQ jump $vee.heartrate.hb_calc.hb_update_min_value;
0x000641        095002AE                 r3 = Null + M[$vee.heartrate.hb_calc.max_index];
0x000642        2054005F                 r3 = r2 - r3;
0x000643        21050004                 Null = r3 - 4;
0x000644        DD40001D                 if NEG jump $vee.heartrate.hb_calc.hb_continue_check;
0x000645        FD0000FF 095032AE        r3 = Null + M[$vee.heartrate.hb_calc.min_index];
0x000647        2054005F                 r3 = r2 - r3;
0x000648        21050008                 Null = r3 - 8;
0x000649        DD400018                 if NEG jump $vee.heartrate.hb_calc.hb_continue_check;
0x00064A        01500000                 r3 = Null + 0;
0x00064B        195002AD                 M[$vee.heartrate.hb_calc.max_flag] = r3 + Null;
0x00064C        E450002F                 r3 = Null + 1;
0x00064D        FD0000FF 195032AD        M[$vee.heartrate.hb_calc.min_flag] = r3 + Null;
0x00064F        FD0000FF 193032AF        M[$vee.heartrate.hb_calc.min_value] = r1 + Null;
0x000651        FD0000FF 194032AE        M[$vee.heartrate.hb_calc.min_index] = r2 + Null;
0x000653        DDF0000E                 jump $vee.heartrate.hb_calc.hb_continue_check;

 <$vee.heartrate.hb_calc.hb_update_min_value>
0x000654        FD0000FF 095032AF        r3 = Null + M[$vee.heartrate.hb_calc.min_value];
0x000656        2003005F                 Null = r1 - r3;
0x000657        DD50000A                 if POS jump $vee.heartrate.hb_calc.hb_continue_check;
0x000658        FD0000FF 095032AE        r3 = Null + M[$vee.heartrate.hb_calc.min_index];
0x00065A        2054005F                 r3 = r2 - r3;
0x00065B        21050008                 Null = r3 - 8;
0x00065C        DD500005                 if POS jump $vee.heartrate.hb_calc.hb_continue_check;
0x00065D        FD0000FF 194032AE        M[$vee.heartrate.hb_calc.min_index] = r2 + Null;
0x00065F        FD0000FF 193032AF        M[$vee.heartrate.hb_calc.min_value] = r1 + Null;

 <$vee.heartrate.hb_calc.hb_continue_check>
0x000661        0032000F                 r1 = r0 + Null;
0x000662        E4CC003F                 r10 = r10 - 1;
0x000663        000C000F                 Null = r10 + Null;
0x000664        DD10FF9A                 if NE jump $vee.heartrate.hb_calc.hb_calc_loop;
0x000665        01200000                 r0 = Null + 0;
0x000666        21070005                 Null = r5 - 5;
0x000667        DD400047                 if NEG jump $vee.heartrate.hb_calc.invalide_exit;
0x000668        01300000                 r1 = Null + 0;
0x000669        01400000                 r2 = Null + 0;
0x00066A        01500000                 r3 = Null + 0;
0x00066B        01600000                 r4 = Null + 0;
0x00066C        01800000                 r6 = Null + 0;

 <$vee.heartrate.hb_calc.hb_outside_loop>
0x00066D        01200000                 r0 = Null + 0;
0x00066E        01400000                 r2 = Null + 0;
0x00066F        FD0000FF D1533226        r3 = M[r1 + -52698];

 <$vee.heartrate.hb_calc.hb_inside_loop>
0x000671        FD0000FF D1643226        r4 = M[r2 + -52698];
0x000673        2005006F                 Null = r3 - r4;
0x000674        20850065                 if POS r6 = r3 - r4;
0x000675        2005006F                 Null = r3 - r4;
0x000676        20860054                 if NEG r6 = r4 - r3;
0x000677        21080004                 Null = r6 - 4;
0x000678        E4220024                 if NEG r0 = r0 + 1;
0x000679        E444002F                 r2 = r2 + 1;
0x00067A        2004007F                 Null = r2 - r5;
0x00067B        DD40FFF6                 if NEG jump $vee.heartrate.hb_calc.hb_inside_loop;
0x00067C        FD0000FF D5233238        M[r1 + -52680] = r0;
0x00067E        E433002F                 r1 = r1 + 1;
0x00067F        2003007F                 Null = r1 - r5;
0x000680        DD40FFED                 if NEG jump $vee.heartrate.hb_calc.hb_outside_loop;
0x000681        01300002                 r1 = Null + 2;
0x000682        0057000F                 r3 = r5 + Null;
0x000683        91E50080                 rMAC = r3 ASHIFT 0 (LO);
0x000684        D9030000                 Div = rMAC / r1;
0x000685        D9200001                 r0 = DivResult;
0x000686        D9300002                 r1 = DivRemainder;
0x000687        0003000F                 Null = r1 + Null;
0x000688        E4220021                 if NE r0 = r0 + 1;
0x000689        01300000                 r1 = Null + 0;
0x00068A        01400000                 r2 = Null + 0;
0x00068B        01500000                 r3 = Null + 0;
0x00068C        01600000                 r4 = Null + 0;
0x00068D        01800000                 r6 = Null + 0;
0x00068E        00C7000F                 r10 = r5 + Null;
0x00068F        01B00000                 r9 = Null + 0;

 <$vee.heartrate.hb_calc.calc_valid_period>
0x000690        FD0000FF D1433238        r2 = M[r1 + -52680];
0x000692        FD0000FF D1833226        r6 = M[r1 + -52698];
0x000694        2004002F                 Null = r2 - r0;
0x000695        DD500002                 if POS jump $vee.heartrate.hb_calc.check_valid_period;
0x000696        DDF0000E                 jump $vee.heartrate.hb_calc.continue_check_period;

 <$vee.heartrate.hb_calc.check_valid_period>
0x000697        01B00078                 r9 = Null + 120;
0x000698        91EB0080                 rMAC = r9 ASHIFT 0 (LO);
0x000699        D9080000                 Div = rMAC / r6;
0x00069A        D9B00001                 r9 = DivResult;
0x00069B        01900000                 r7 = Null + 0;
0x00069C        210B000A                 Null = r9 - 10;
0x00069D        E4990025                 if POS r7 = r7 + 1;
0x00069E        200700BF                 Null = r5 - r9;
0x00069F        E4990024                 if NEG r7 = r7 + 1;
0x0006A0        21090002                 Null = r7 - 2;
0x0006A1        DD000003                 if EQ jump $vee.heartrate.hb_calc.continue_check_period;
0x0006A2        E455002F                 r3 = r3 + 1;
0x0006A3        03680000                 r4 = r4 + r6;

 <$vee.heartrate.hb_calc.continue_check_period>
0x0006A4        E433002F                 r1 = r1 + 1;
0x0006A5        E4CC003F                 r10 = r10 - 1;
0x0006A6        000C000F                 Null = r10 + Null;
0x0006A7        DD10FFE9                 if NE jump $vee.heartrate.hb_calc.calc_valid_period;
0x0006A8        0005000F                 Null = r3 + Null;
0x0006A9        DD000005                 if EQ jump $vee.heartrate.hb_calc.invalide_exit;
0x0006AA        0026000F                 r0 = r4 + Null;
0x0006AB        0035000F                 r1 = r3 + Null;
0x0006AC        E1F0FEED                 call $vee.heartrate.average_hb;
0x0006AD        DDF0FC41                 jump $pop_rLink_and_rts;

 <$vee.heartrate.hb_calc.invalide_exit>
0x0006AE        01200000                 r0 = Null + 0;
0x0006AF        DDF0FC3F                 jump $pop_rLink_and_rts;

 <$vee.accelerate.neck_protect>
0x0006B0        F3D00000                 push rLink;
0x0006B1        093002BE                 r1 = Null + M[$vee.accelerate.neck_protect.acc_count];
0x0006B2        2103000A                 Null = r1 - 10;
0x0006B3        DD400061                 if NEG jump $vee.accelerate.neck_protect.store_acc_value;
0x0006B4        2103000A                 Null = r1 - 10;
0x0006B5        DD000002                 if EQ jump $vee.accelerate.neck_protect.calc_angle_value;
0x0006B6        DDF0FC38                 jump $pop_rLink_and_rts;

 <$vee.accelerate.neck_protect.calc_angle_value>
0x0006B7        FD0000FF 0120325E        r0 = Null + -52642;
0x0006B9        0130000A                 r1 = Null + 10;
0x0006BA        E1F0007F                 call $vee.accelerate.necke_protect.acc_average;
0x0006BB        0072000F                 r5 = r0 + Null;
0x0006BC        E1F0FD7E                 call $vee.accelerate.arcsin;
0x0006BD        FD0000FF 192032B5        M[$vee.accelerate.angle_x_int] = r0 + Null;
0x0006BF        0120026D                 r0 = Null + 621;
0x0006C0        0130000A                 r1 = Null + 10;
0x0006C1        E1F00078                 call $vee.accelerate.necke_protect.acc_average;
0x0006C2        0072000F                 r5 = r0 + Null;
0x0006C3        E1F0FD77                 call $vee.accelerate.arcsin;
0x0006C4        192002B6                 M[$vee.accelerate.angle_y_int] = r0 + Null;
0x0006C5        FD0000FF 01203268        r0 = Null + -52632;
0x0006C7        0130000A                 r1 = Null + 10;
0x0006C8        E1F00071                 call $vee.accelerate.necke_protect.acc_average;
0x0006C9        0072000F                 r5 = r0 + Null;
0x0006CA        E1F0FD4D                 call $vee.accelerate.arccos;
0x0006CB        FD0000FF 192032B6        M[$vee.accelerate.angle_z_int] = r0 + Null;
0x0006CD        01300000                 r1 = Null + 0;
0x0006CE        193002BE                 M[$vee.accelerate.neck_protect.acc_count] = r1 + Null;
0x0006CF        FD0000FF 093032BE        r1 = Null + M[$vee.accelerate.neck_protect.angle_count];
0x0006D1        2103000A                 Null = r1 - 10;
0x0006D2        DD40004E                 if NEG jump $vee.accelerate.neck_protect.store_angle_value;
0x0006D3        2103000A                 Null = r1 - 10;
0x0006D4        DD00002E                 if EQ jump $vee.accelerate.neck_protect.calc_init_angle;
0x0006D5        FD0000FF 093032B5        r1 = Null + M[$vee.accelerate.angle_x_int];
0x0006D7        094002BF                 r2 = Null + M[$vee.accelerate.neck_protect.angle_x_init];
0x0006D8        2003004F                 Null = r1 - r2;
0x0006D9        20530045                 if POS r3 = r1 - r2;
0x0006DA        2003004F                 Null = r1 - r2;
0x0006DB        20540034                 if NEG r3 = r2 - r1;
0x0006DC        21050028                 Null = r3 - 40;
0x0006DD        DD500017                 if POS jump $vee.accelerate.neck_protect.start_timer_count;
0x0006DE        093002B6                 r1 = Null + M[$vee.accelerate.angle_y_int];
0x0006DF        FD0000FF 094032BF        r2 = Null + M[$vee.accelerate.neck_protect.angle_y_init];
0x0006E1        2003004F                 Null = r1 - r2;
0x0006E2        20530045                 if POS r3 = r1 - r2;
0x0006E3        2003004F                 Null = r1 - r2;
0x0006E4        20540034                 if NEG r3 = r2 - r1;
0x0006E5        21050028                 Null = r3 - 40;
0x0006E6        DD50000E                 if POS jump $vee.accelerate.neck_protect.start_timer_count;
0x0006E7        FD0000FF 093032B6        r1 = Null + M[$vee.accelerate.angle_z_int];
0x0006E9        094002C0                 r2 = Null + M[$vee.accelerate.neck_protect.angle_z_init];
0x0006EA        2003004F                 Null = r1 - r2;
0x0006EB        20530045                 if POS r3 = r1 - r2;
0x0006EC        2003004F                 Null = r1 - r2;
0x0006ED        20540034                 if NEG r3 = r2 - r1;
0x0006EE        21050028                 Null = r3 - 40;
0x0006EF        DD500005                 if POS jump $vee.accelerate.neck_protect.start_timer_count;
0x0006F0        01200000                 r0 = Null + 0;
0x0006F1        FD0000FF 192032C0        M[$vee.accelerate.neck_protect.neck_timer_enable] = r0 + Null;
0x0006F3        DDF0FBFB                 jump $pop_rLink_and_rts;

 <$vee.accelerate.neck_protect.start_timer_count>
0x0006F4        FD0000FF 092032C0        r0 = Null + M[$vee.accelerate.neck_protect.neck_timer_enable];
0x0006F6        0002000F                 Null = r0 + Null;
0x0006F7        DD10FBF7                 if NE jump $pop_rLink_and_rts;
0x0006F8        FD0000FF 01303296        r1 = Null + -52586;
0x0006FA        FD00000F 01404240        r2 = Null + 1000000;
0x0006FC        0150074D                 r3 = Null + 1869;
0x0006FD        E1F0FBEF                 call $timer.schedule_event_in;
0x0006FE        E420002F                 r0 = Null + 1;
0x0006FF        FD0000FF 192032C0        M[$vee.accelerate.neck_protect.neck_timer_enable] = r0 + Null;
0x000701        DDF0FBED                 jump $pop_rLink_and_rts;

 <$vee.accelerate.neck_protect.calc_init_angle>
0x000702        E433002F                 r1 = r1 + 1;
0x000703        FD0000FF 193032BE        M[$vee.accelerate.neck_protect.angle_count] = r1 + Null;
0x000705        01200259                 r0 = Null + 601;
0x000706        0130000A                 r1 = Null + 10;
0x000707        E1F00026                 call $vee.accelerate.necke_protect.average_method;
0x000708        192002BF                 M[$vee.accelerate.neck_protect.angle_x_init] = r0 + Null;
0x000709        FD0000FF 01203254        r0 = Null + -52652;
0x00070B        0130000A                 r1 = Null + 10;
0x00070C        E1F00021                 call $vee.accelerate.necke_protect.average_method;
0x00070D        FD0000FF 192032BF        M[$vee.accelerate.neck_protect.angle_y_init] = r0 + Null;
0x00070F        01200263                 r0 = Null + 611;
0x000710        0130000A                 r1 = Null + 10;
0x000711        E1F0001C                 call $vee.accelerate.necke_protect.average_method;
0x000712        192002C0                 M[$vee.accelerate.neck_protect.angle_z_init] = r0 + Null;
0x000713        DDF0FBDB                 jump $pop_rLink_and_rts;

 <$vee.accelerate.neck_protect.store_acc_value>
0x000714        092002B7                 r0 = Null + M[$vee.accelerate.acc_axis_x];
0x000715        FD0000FF D523325E        M[r1 + -52642] = r0;
0x000717        FD0000FF 092032B7        r0 = Null + M[$vee.accelerate.acc_axis_y];
0x000719        D523026D                 M[r1 + 621] = r0;
0x00071A        092002B8                 r0 = Null + M[$vee.accelerate.acc_axis_z];
0x00071B        FD0000FF D5233268        M[r1 + -52632] = r0;
0x00071D        E433002F                 r1 = r1 + 1;
0x00071E        193002BE                 M[$vee.accelerate.neck_protect.acc_count] = r1 + Null;
0x00071F        DDF0FBCF                 jump $pop_rLink_and_rts;

 <$vee.accelerate.neck_protect.store_angle_value>
0x000720        FD0000FF 092032B5        r0 = Null + M[$vee.accelerate.angle_x_int];
0x000722        D5230259                 M[r1 + 601] = r0;
0x000723        092002B6                 r0 = Null + M[$vee.accelerate.angle_y_int];
0x000724        FD0000FF D5233254        M[r1 + -52652] = r0;
0x000726        FD0000FF 092032B6        r0 = Null + M[$vee.accelerate.angle_z_int];
0x000728        D5230263                 M[r1 + 611] = r0;
0x000729        E433002F                 r1 = r1 + 1;
0x00072A        FD0000FF 193032BE        M[$vee.accelerate.neck_protect.angle_count] = r1 + Null;
0x00072C        DDF0FBC2                 jump $pop_rLink_and_rts;

 <$vee.accelerate.necke_protect.average_method>
0x00072D        F3D00000                 push rLink;
0x00072E        5000002F                 I0 = Null + r0;
0x00072F        51C00000                 L0 = Null + 0;
0x000730        00C3000F                 r10 = r1 + Null;
0x000731        01500000                 r3 = Null + 0;
0x000732        E5F00003                 do $vee.accelerate.neck_protect.angle_init_loop;
0x000733        03004100                 Null = Null + Null, r2 = M[I0,1];
0x000734        03540000                 r3 = r3 + r2;

 <$vee.accelerate.neck_protect.angle_init_loop>
0x000735        91E50080                 rMAC = r3 ASHIFT 0 (LO);
0x000736        D9030000                 Div = rMAC / r1;
0x000737        D9200001                 r0 = DivResult;
0x000738        DDF0FBB6                 jump $pop_rLink_and_rts;

 <$vee.accelerate.necke_protect.acc_average>
0x000739        F3D00000                 push rLink;
0x00073A        5000002F                 I0 = Null + r0;
0x00073B        51C00000                 L0 = Null + 0;
0x00073C        00C3000F                 r10 = r1 + Null;
0x00073D        01500000                 r3 = Null + 0;
0x00073E        01600063                 r4 = Null + 99;
0x00073F        0170FF9D                 r5 = Null + -99;
0x000740        E5F00003                 do $vee.accelerate.neck_protect.acc_average_loop;
0x000741        03004100                 Null = Null + Null, r2 = M[I0,1];
0x000742        03540000                 r3 = r3 + r2;

 <$vee.accelerate.neck_protect.acc_average_loop>
0x000743        0035000F                 r1 = r3 + Null;
0x000744        21030064                 Null = r1 - 100;
0x000745        00560005                 if POS r3 = r4 + Null;
0x000746        01030064                 Null = r1 + 100;
0x000747        00570004                 if NEG r3 = r5 + Null;
0x000748        FD000001 CD1547AE        rMAC = r3 * 0.0099999904632568359 (SS);
0x00074A        8D210018                 r0 = rMAC LSHIFT 24;
0x00074B        8D22007F                 r0 = r0 LSHIFT -1;
0x00074C        DDF0FBA2                 jump $pop_rLink_and_rts;

 <$vee.accelerate.neck_protect.neck_timer_handler>
0x00074D        F3D00000                 push rLink;
0x00074E        092002C1                 r0 = Null + M[$vee.accelerate.neck_protect.neck_timer_count];
0x00074F        E422002F                 r0 = r0 + 1;
0x000750        192002C1                 M[$vee.accelerate.neck_protect.neck_timer_count] = r0 + Null;
0x000751        2102001E                 Null = r0 - 30;
0x000752        DD50000C                 if POS jump $vee.accelerate.neck_protect.send_neck_prompt_event;
0x000753        FD0000FF 092032C0        r0 = Null + M[$vee.accelerate.neck_protect.neck_timer_enable];
0x000755        0002000F                 Null = r0 + Null;
0x000756        DD00FB98                 if EQ jump $pop_rLink_and_rts;
0x000757        FD0000FF 01303296        r1 = Null + -52586;
0x000759        FD00000F 01404240        r2 = Null + 1000000;
0x00075B        0150074D                 r3 = Null + 1869;
0x00075C        E1F0FB8D                 call $timer.schedule_event_in_period;
0x00075D        DDF0FB91                 jump $pop_rLink_and_rts;

 <$vee.accelerate.neck_protect.send_neck_prompt_event>
0x00075E        01200000                 r0 = Null + 0;
0x00075F        192002C1                 M[$vee.accelerate.neck_protect.neck_timer_count] = r0 + Null;
0x000760        FD0000FF 192032C0        M[$vee.accelerate.neck_protect.neck_timer_enable] = r0 + Null;
0x000762        192002BE                 M[$vee.accelerate.neck_protect.acc_count] = r0 + Null;
0x000763        FD0000FF 192032BE        M[$vee.accelerate.neck_protect.angle_count] = r0 + Null;
0x000765        01404F23                 r2 = Null + 20259;
0x000766        E1F0FAC6                 call $message.send_short;
0x000767        DDF0FB87                 jump $pop_rLink_and_rts;

 <$vee.accelerate.const_seat>
0x000768        F3D00000                 push rLink;
0x000769        01500000                 r3 = Null + 0;
0x00076A        093002B7                 r1 = Null + M[$vee.accelerate.acc_axis_x];
0x00076B        9B330000                 r1 = r1 * r1 (int);
0x00076C        03530000                 r3 = r3 + r1;
0x00076D        FD0000FF 093032B7        r1 = Null + M[$vee.accelerate.acc_axis_y];
0x00076F        9B330000                 r1 = r1 * r1 (int);
0x000770        03530000                 r3 = r3 + r1;
0x000771        01200000                 r0 = Null + 0;
0x000772        FD0000FF 093032BA        r1 = Null + M[$vee.accelerate.const_seat.p_value];
0x000774        01400000                 r2 = Null + 0;
0x000775        FD0000FF 092032BC        r0 = Null + M[$vee.accelerate.const_seat.stable_status];
0x000777        0002000F                 Null = r0 + Null;
0x000778        DD100012                 if NE jump $vee.accelerate.const_seat.get_up_state_check;

 <$vee.accelerate.const_seat.stable_state_check>
0x000779        21050082                 Null = r3 - 130;
0x00077A        DD50000B                 if POS jump $vee.accelerate.const_seat.continue_stable_state_check;
0x00077B        21050046                 Null = r3 - 70;
0x00077C        DD400009                 if NEG jump $vee.accelerate.const_seat.continue_stable_state_check;
0x00077D        094002BA                 r2 = Null + M[$vee.accelerate.const_seat.stable_count];
0x00077E        E444002F                 r2 = r2 + 1;
0x00077F        2104003C                 Null = r2 - 60;
0x000780        DD500045                 if POS jump $vee.accelerate.const_seat.start_seat_timer;
0x000781        194002BA                 M[$vee.accelerate.const_seat.stable_count] = r2 + Null;
0x000782        FD0000FF 195032BA        M[$vee.accelerate.const_seat.p_value] = r3 + Null;
0x000784        DDF0FB6A                 jump $pop_rLink_and_rts;

 <$vee.accelerate.const_seat.continue_stable_state_check>
0x000785        01200000                 r0 = Null + 0;
0x000786        192002BA                 M[$vee.accelerate.const_seat.stable_count] = r0 + Null;
0x000787        FD0000FF 195032BA        M[$vee.accelerate.const_seat.p_value] = r3 + Null;
0x000789        DDF0FB65                 jump $pop_rLink_and_rts;

 <$vee.accelerate.const_seat.get_up_state_check>
0x00078A        FD0000FF 092032BC        r0 = Null + M[$vee.accelerate.const_seat.stable_status];
0x00078C        0002000F                 Null = r0 + Null;
0x00078D        DD000035                 if EQ jump $vee.accelerate.const_seat.get_up_continue_check;
0x00078E        2005003F                 Null = r3 - r1;
0x00078F        DD50000D                 if POS jump $vee.accelerate.const_seat.seat_check_max_value;

 <$vee.accelerate.const_seat.seat_check_min_value>
0x000790        092002BB                 r0 = Null + M[$vee.accelerate.const_seat.status];
0x000791        0002000F                 Null = r0 + Null;
0x000792        DD100030                 if NE jump $vee.accelerate.const_seat.get_up_continue_check;
0x000793        E420002F                 r0 = Null + 1;
0x000794        192002BB                 M[$vee.accelerate.const_seat.status] = r0 + Null;
0x000795        2103008C                 Null = r1 - 140;
0x000796        DD40002C                 if NEG jump $vee.accelerate.const_seat.get_up_continue_check;
0x000797        E420002F                 r0 = Null + 1;
0x000798        FD0000FF 192032BB        M[$vee.accelerate.const_seat.max_flag] = r0 + Null;
0x00079A        193002BC                 M[$vee.accelerate.const_seat.max_value] = r1 + Null;
0x00079B        DDF00027                 jump $vee.accelerate.const_seat.get_up_continue_check;

 <$vee.accelerate.const_seat.seat_check_max_value>
0x00079C        092002BB                 r0 = Null + M[$vee.accelerate.const_seat.status];
0x00079D        0002000F                 Null = r0 + Null;
0x00079E        DD000024                 if EQ jump $vee.accelerate.const_seat.get_up_continue_check;
0x00079F        01200000                 r0 = Null + 0;
0x0007A0        192002BB                 M[$vee.accelerate.const_seat.status] = r0 + Null;
0x0007A1        21030046                 Null = r1 - 70;
0x0007A2        DD500020                 if POS jump $vee.accelerate.const_seat.get_up_continue_check;
0x0007A3        E1F0FB24                 call $block_interrupts;
0x0007A4        01200000                 r0 = Null + 0;
0x0007A5        192002BA                 M[$vee.accelerate.const_seat.stable_count] = r0 + Null;
0x0007A6        FD0000FF 192032BC        M[$vee.accelerate.const_seat.stable_status] = r0 + Null;
0x0007A8        FD0000FF 192032B8        M[$vee.accelerate.const_seat.seat_timer_enable] = r0 + Null;
0x0007AA        FD0000FF 092032B9        r0 = Null + M[$vee.accelerate.const_seat.move_timer_count];
0x0007AC        E422002F                 r0 = r0 + 1;
0x0007AD        FD0000FF 192032B9        M[$vee.accelerate.const_seat.move_timer_count] = r0 + Null;
0x0007AF        E1F0FB06                 call $interrupt.unblock;
0x0007B0        2103003C                 Null = r1 - 60;
0x0007B1        DD500011                 if POS jump $vee.accelerate.const_seat.get_up_continue_check;
0x0007B2        FD0000FF 092032BB        r0 = Null + M[$vee.accelerate.const_seat.max_flag];
0x0007B4        0002000F                 Null = r0 + Null;
0x0007B5        DD00000D                 if EQ jump $vee.accelerate.const_seat.get_up_continue_check;
0x0007B6        092002BC                 r0 = Null + M[$vee.accelerate.const_seat.max_value];
0x0007B7        23230000                 r0 = r0 - r1;
0x0007B8        21020064                 Null = r0 - 100;
0x0007B9        DD400009                 if NEG jump $vee.accelerate.const_seat.get_up_continue_check;
0x0007BA        E1F0FB0D                 call $block_interrupts;
0x0007BB        01200000                 r0 = Null + 0;
0x0007BC        FD0000FF 192032BB        M[$vee.accelerate.const_seat.max_flag] = r0 + Null;
0x0007BE        192002B9                 M[$vee.accelerate.const_seat.seat_timer_count] = r0 + Null;
0x0007BF        E1F0FAF6                 call $interrupt.unblock;
0x0007C0        01404F22                 r2 = Null + 20258;
0x0007C1        E1F0FA6B                 call $message.send_short;

 <$vee.accelerate.const_seat.get_up_continue_check>
0x0007C2        FD0000FF 195032BA        M[$vee.accelerate.const_seat.p_value] = r3 + Null;
0x0007C4        DDF0FB2A                 jump $pop_rLink_and_rts;

 <$vee.accelerate.const_seat.start_seat_timer>
0x0007C5        FD0000FF 092032B8        r0 = Null + M[$vee.accelerate.const_seat.seat_timer_enable];
0x0007C7        0002000F                 Null = r0 + Null;
0x0007C8        DD10FB26                 if NE jump $pop_rLink_and_rts;
0x0007C9        01300298                 r1 = Null + 664;
0x0007CA        FD00000F 01404240        r2 = Null + 1000000;
0x0007CC        015007D4                 r3 = Null + 2004;
0x0007CD        E1F0FB1F                 call $timer.schedule_event_in;
0x0007CE        E420002F                 r0 = Null + 1;
0x0007CF        FD0000FF 192032B8        M[$vee.accelerate.const_seat.seat_timer_enable] = r0 + Null;
0x0007D1        FD0000FF 192032BC        M[$vee.accelerate.const_seat.stable_status] = r0 + Null;
0x0007D3        DDF0FB1B                 jump $pop_rLink_and_rts;

 <$vee.accelerate.const_seat.seat_timer_handler>
0x0007D4        F3D00000                 push rLink;
0x0007D5        FD0000FF 092032B8        r0 = Null + M[$vee.accelerate.const_seat.seat_timer_enable];
0x0007D7        0002000F                 Null = r0 + Null;
0x0007D8        DD00FB16                 if EQ jump $pop_rLink_and_rts;
0x0007D9        092002B9                 r0 = Null + M[$vee.accelerate.const_seat.seat_timer_count];
0x0007DA        E422002F                 r0 = r0 + 1;
0x0007DB        2102001E                 Null = r0 - 30;
0x0007DC        DD500008                 if POS jump $vee.accelerate.const_seat.send_const_seat_event;
0x0007DD        192002B9                 M[$vee.accelerate.const_seat.seat_timer_count] = r0 + Null;

 <$vee.accelerate.const_seat.another_timer_event>
0x0007DE        01300298                 r1 = Null + 664;
0x0007DF        FD00000F 01404240        r2 = Null + 1000000;
0x0007E1        015007D4                 r3 = Null + 2004;
0x0007E2        E1F0FB07                 call $timer.schedule_event_in_period;
0x0007E3        DDF0FB0B                 jump $pop_rLink_and_rts;

 <$vee.accelerate.const_seat.send_const_seat_event>
0x0007E4        FD0000FF 092032BC        r0 = Null + M[$vee.accelerate.const_seat.stable_status];
0x0007E6        0002000F                 Null = r0 + Null;
0x0007E7        DD000013                 if EQ jump $vee.accelerate.const_seat.dont_send_seat_event;
0x0007E8        01404F26                 r2 = Null + 20262;
0x0007E9        E1F0FA43                 call $message.send_short;
0x0007EA        01200000                 r0 = Null + 0;
0x0007EB        192002B9                 M[$vee.accelerate.const_seat.seat_timer_count] = r0 + Null;
0x0007EC        FD0000FF 192032B8        M[$vee.accelerate.const_seat.seat_timer_enable] = r0 + Null;
0x0007EE        FD0000FF 192032BC        M[$vee.accelerate.const_seat.stable_status] = r0 + Null;
0x0007F0        192002BA                 M[$vee.accelerate.const_seat.stable_count] = r0 + Null;
0x0007F1        FD0000FF 192032BA        M[$vee.accelerate.const_seat.p_value] = r0 + Null;
0x0007F3        192002BB                 M[$vee.accelerate.const_seat.status] = r0 + Null;
0x0007F4        FD0000FF 192032BB        M[$vee.accelerate.const_seat.max_flag] = r0 + Null;
0x0007F6        192002BC                 M[$vee.accelerate.const_seat.max_value] = r0 + Null;
0x0007F7        FD0000FF 192032BC        M[$vee.accelerate.const_seat.stable_status] = r0 + Null;
0x0007F9        DDF0FAF5                 jump $pop_rLink_and_rts;

 <$vee.accelerate.const_seat.dont_send_seat_event>
0x0007FA        092002B9                 r0 = Null + M[$vee.accelerate.const_seat.seat_timer_count];
0x0007FB        E422002F                 r0 = r0 + 1;
0x0007FC        192002B9                 M[$vee.accelerate.const_seat.seat_timer_count] = r0 + Null;
0x0007FD        2142001E                 r2 = r0 - 30;
0x0007FE        2104000A                 Null = r2 - 10;
0x0007FF        DD40FFDF                 if NEG jump $vee.accelerate.const_seat.another_timer_event;
0x000800        0120001E                 r0 = Null + 30;
0x000801        192002B9                 M[$vee.accelerate.const_seat.seat_timer_count] = r0 + Null;
0x000802        FD0000FF 092032B9        r0 = Null + M[$vee.accelerate.const_seat.move_timer_count];
0x000804        01300000                 r1 = Null + 0;
0x000805        FD0000FF 193032B9        M[$vee.accelerate.const_seat.move_timer_count] = r1 + Null;
0x000807        21020005                 Null = r0 - 5;
0x000808        DD40FFD6                 if NEG jump $vee.accelerate.const_seat.another_timer_event;
0x000809        01200000                 r0 = Null + 0;
0x00080A        192002B9                 M[$vee.accelerate.const_seat.seat_timer_count] = r0 + Null;
0x00080B        DDF0FFD3                 jump $vee.accelerate.const_seat.another_timer_event;

 <$vee.heartrate.hb_smooth>
0x00080C        F3D00000                 push rLink;
0x00080D        01C00005                 r10 = Null + 5;
0x00080E        FD0000FF 01603272        r4 = Null + -52622;
0x000810        003C000F                 r1 = r10 + Null;
0x000811        E5F00005                 do $vee.heartrate.hb_smooth.add_value_to_origin_buff;
0x000812        E473003F                 r5 = r1 - 1;
0x000813        D046007F                 r2 = M[r4 + r5];
0x000814        D446003F                 M[r4 + r1] = r2;
0x000815        E433003F                 r1 = r1 - 1;

 <$vee.heartrate.hb_smooth.add_value_to_origin_buff>
0x000816        1862000F                 M[r4] = r0 + Null;
0x000817        D1360001                 r1 = M[r4 + 1];
0x000818        FD0000FF 193032B0        M[$vee.heartrate.hb_smooth.p_hb_value] = r1 + Null;
0x00081A        FD0000FF 093032B1        r1 = Null + M[$vee.heartrate.hb_smooth.hb_smooth_status];
0x00081C        0003000F                 Null = r1 + Null;
0x00081D        DD000006                 if EQ jump $vee.heartrate.hb_smooth.hb_smooth_before;
0x00081E        E403003F                 Null = r1 - 1;
0x00081F        DD000029                 if EQ jump $vee.heartrate.hb_smooth.hb_smooth_middle;
0x000820        21030002                 Null = r1 - 2;
0x000821        DD00004C                 if EQ jump $vee.heartrate.hb_smooth.hb_smooth_after;
0x000822        DDF00074                 jump $vee.heartrate.hb_smooth.smooth_hb_value;

 <$vee.heartrate.hb_smooth.hb_smooth_before>
0x000823        01C00003                 r10 = Null + 3;
0x000824        FD0000FF 51003272        I0 = Null + -52622;
0x000826        51C00000                 L0 = Null + 0;
0x000827        01300000                 r1 = Null + 0;
0x000828        01400000                 r2 = Null + 0;
0x000829        01500000                 r3 = Null + 0;
0x00082A        01600000                 r4 = Null + 0;
0x00082B        E5F00009                 do $vee.heartrate.hb_smooth.desity_filter_add;
0x00082C        03003100                 Null = Null + Null, r1 = M[I0,1];
0x00082D        03530000                 r3 = r3 + r1;
0x00082E        2003002F                 Null = r1 - r0;
0x00082F        20420034                 if NEG r2 = r0 - r1;
0x000830        2003002F                 Null = r1 - r0;
0x000831        20430025                 if POS r2 = r1 - r0;
0x000832        21040004                 Null = r2 - 4;
0x000833        E4660024                 if NEG r4 = r4 + 1;

 <$vee.heartrate.hb_smooth.desity_filter_add>
0x000834        01300003                 r1 = Null + 3;
0x000835        91E50080                 rMAC = r3 ASHIFT 0 (LO);
0x000836        D9030000                 Div = rMAC / r1;
0x000837        D9300001                 r1 = DivResult;
0x000838        21030032                 Null = r1 - 50;
0x000839        00200004                 if NEG r0 = Null + Null;
0x00083A        21030032                 Null = r1 - 50;
0x00083B        DD40005B                 if NEG jump $vee.heartrate.hb_smooth.smooth_hb_value;
0x00083C        21060003                 Null = r4 - 3;
0x00083D        DD400059                 if NEG jump $vee.heartrate.hb_smooth.smooth_hb_value;
0x00083E        E440002F                 r2 = Null + 1;
0x00083F        FD0000FF 194032B1        M[$vee.heartrate.hb_smooth.hb_smooth_status] = r2 + Null;
0x000841        0042000F                 r2 = r0 + Null;
0x000842        FD0000FF 0120324A        r0 = Null + -52662;
0x000844        0130000A                 r1 = Null + 10;
0x000845        E1F0FD7D                 call $vee.heartrate.zero_buff;
0x000846        0024000F                 r0 = r2 + Null;
0x000847        DDF0004F                 jump $vee.heartrate.hb_smooth.smooth_hb_value;

 <$vee.heartrate.hb_smooth.hb_smooth_middle>
0x000848        0002000F                 Null = r0 + Null;
0x000849        DD000014                 if EQ jump $vee.heartrate.hb_smooth.hb_smooth_zero_check;

 <$vee.heartrate.hb_smooth.hb_smooth_filter>
0x00084A        093002B0                 r1 = Null + M[$vee.heartrate.hb_smooth.p_smooth_value];
0x00084B        01530004                 r3 = r1 + 4;
0x00084C        0143000C                 r2 = r1 + 12;
0x00084D        2002004F                 Null = r0 - r2;
0x00084E        DD50002D                 if POS jump $vee.heartrate.hb_smooth.calc_smooth_hb;
0x00084F        21530004                 r3 = r1 - 4;
0x000850        2143000C                 r2 = r1 - 12;
0x000851        2004002F                 Null = r2 - r0;
0x000852        DD500029                 if POS jump $vee.heartrate.hb_smooth.calc_smooth_hb;
0x000853        0053000F                 r3 = r1 + Null;
0x000854        01430004                 r2 = r1 + 4;
0x000855        2002004F                 Null = r0 - r2;
0x000856        DD500025                 if POS jump $vee.heartrate.hb_smooth.calc_smooth_hb;
0x000857        0053000F                 r3 = r1 + Null;
0x000858        21430004                 r2 = r1 - 4;
0x000859        2004002F                 Null = r2 - r0;
0x00085A        DD500021                 if POS jump $vee.heartrate.hb_smooth.calc_smooth_hb;
0x00085B        0052000F                 r3 = r0 + Null;
0x00085C        DDF0001F                 jump $vee.heartrate.hb_smooth.calc_smooth_hb;

 <$vee.heartrate.hb_smooth.hb_smooth_zero_check>
0x00085D        01400000                 r2 = Null + 0;
0x00085E        095002B1                 r3 = Null + M[$vee.heartrate.hb_smooth.p_yzero];
0x00085F        E455002F                 r3 = r3 + 1;
0x000860        FD0000FF 093032B0        r1 = Null + M[$vee.heartrate.hb_smooth.p_hb_value];
0x000862        0003000F                 Null = r1 + Null;
0x000863        00540001                 if NE r3 = r2 + Null;
0x000864        195002B1                 M[$vee.heartrate.hb_smooth.p_yzero] = r3 + Null;
0x000865        FD0000FF 093032B1        r1 = Null + M[$vee.heartrate.hb_smooth.hb_smooth_status];
0x000867        01400002                 r2 = Null + 2;
0x000868        21050005                 Null = r3 - 5;
0x000869        00340005                 if POS r1 = r2 + Null;
0x00086A        FD0000FF 193032B1        M[$vee.heartrate.hb_smooth.hb_smooth_status] = r1 + Null;
0x00086C        DDF0FFDE                 jump $vee.heartrate.hb_smooth.hb_smooth_filter;

 <$vee.heartrate.hb_smooth.hb_smooth_after>
0x00086D        01200000                 r0 = Null + 0;
0x00086E        FD0000FF 192032B1        M[$vee.heartrate.hb_smooth.hb_smooth_status] = r0 + Null;
0x000870        192002B1                 M[$vee.heartrate.hb_smooth.p_yzero] = r0 + Null;
0x000871        FD0000FF 0120324A        r0 = Null + -52662;
0x000873        0130000A                 r1 = Null + 10;
0x000874        E1F0FD4E                 call $vee.heartrate.zero_buff;
0x000875        FD0000FF 01203272        r0 = Null + -52622;
0x000877        01300006                 r1 = Null + 6;
0x000878        E1F0FD4A                 call $vee.heartrate.zero_buff;
0x000879        01200000                 r0 = Null + 0;
0x00087A        DDF0001C                 jump $vee.heartrate.hb_smooth.smooth_hb_value;

 <$vee.heartrate.hb_smooth.calc_smooth_hb>
0x00087B        01C00009                 r10 = Null + 9;
0x00087C        FD0000FF 0160324A        r4 = Null + -52662;
0x00087E        003C000F                 r1 = r10 + Null;
0x00087F        E5F00005                 do $vee.heartrate.hb_smooth.add_value_to_fifo;
0x000880        E473003F                 r5 = r1 - 1;
0x000881        D046007F                 r2 = M[r4 + r5];
0x000882        D446003F                 M[r4 + r1] = r2;
0x000883        E433003F                 r1 = r1 - 1;

 <$vee.heartrate.hb_smooth.add_value_to_fifo>
0x000884        1865000F                 M[r4] = r3 + Null;
0x000885        01C0000A                 r10 = Null + 10;
0x000886        01200000                 r0 = Null + 0;
0x000887        01300000                 r1 = Null + 0;
0x000888        01400000                 r2 = Null + 0;
0x000889        01500000                 r3 = Null + 0;
0x00088A        E5F00007                 do $vee.heartrate.hb_smooth.smooth_average;
0x00088B        D056004F                 r3 = M[r4 + r2];
0x00088C        0005000F                 Null = r3 + Null;
0x00088D        00220051                 if NE r0 = r0 + r3;
0x00088E        0005000F                 Null = r3 + Null;
0x00088F        E4330021                 if NE r1 = r1 + 1;
0x000890        E444002F                 r2 = r2 + 1;

 <$vee.heartrate.hb_smooth.smooth_average>
0x000891        0002000F                 Null = r0 + Null;
0x000892        DD000004                 if EQ jump $vee.heartrate.hb_smooth.smooth_hb_value;
0x000893        91E20080                 rMAC = r0 ASHIFT 0 (LO);
0x000894        D9030000                 Div = rMAC / r1;
0x000895        D9200001                 r0 = DivResult;

 <$vee.heartrate.hb_smooth.smooth_hb_value>
0x000896        FD0000FF 192032AA        M[$vee.heartrate.heartrate] = r0 + Null;
0x000898        192002B0                 M[$vee.heartrate.hb_smooth.p_smooth_value] = r0 + Null;
0x000899        DDF0FA55                 jump $pop_rLink_and_rts;

 <$vee.heartrate.hb_recover>
0x00089A        F3D00000                 push rLink;
0x00089B        FD0000FF 5100324A        I0 = Null + -52662;
0x00089D        51C00000                 L0 = Null + 0;
0x00089E        01C0000A                 r10 = Null + 10;
0x00089F        E5F00002                 do $vee.heartrate.hb_smooth.hb_value_recover;
0x0008A0        0300B100                 Null = Null + Null, M[I0,1] = r1;

 <$vee.heartrate.hb_smooth.hb_value_recover>
0x0008A1        DDF0FA4D                 jump $pop_rLink_and_rts;

 <$vee.accelerate.step_count>
0x0008A2        F3D00000                 push rLink;
0x0008A3        01500000                 r3 = Null + 0;
0x0008A4        093002B7                 r1 = Null + M[$vee.accelerate.acc_axis_x];
0x0008A5        9B330000                 r1 = r1 * r1 (int);
0x0008A6        03530000                 r3 = r3 + r1;
0x0008A7        FD0000FF 093032B7        r1 = Null + M[$vee.accelerate.acc_axis_y];
0x0008A9        9B330000                 r1 = r1 * r1 (int);
0x0008AA        03530000                 r3 = r3 + r1;
0x0008AB        FD0000FF 093032C1        r1 = Null + M[$vee.accelerate.step_count.p_value];
0x0008AD        094002C2                 r2 = Null + M[$vee.accelerate.step_count.index_curr];
0x0008AE        01200000                 r0 = Null + 0;
0x0008AF        097002C3                 r5 = Null + M[$vee.accelerate.step_count.index_max];
0x0008B0        2005003F                 Null = r3 - r1;
0x0008B1        DD500021                 if POS jump $vee.accelerate.step_count.check_max_value;

 <$vee.accelerate.step_count.check_min_value>
0x0008B2        FD0000FF 092032C2        r0 = Null + M[$vee.accelerate.step_count.status];
0x0008B4        0002000F                 Null = r0 + Null;
0x0008B5        DD100031                 if NE jump $vee.accelerate.step_count.continue_check;
0x0008B6        E420002F                 r0 = Null + 1;
0x0008B7        FD0000FF 192032C2        M[$vee.accelerate.step_count.status] = r0 + Null;
0x0008B9        2103005A                 Null = r1 - 90;
0x0008BA        DD40002C                 if NEG jump $vee.accelerate.step_count.continue_check;
0x0008BB        2024007F                 r0 = r2 - r5;
0x0008BC        21020003                 Null = r0 - 3;
0x0008BD        DD400029                 if NEG jump $vee.accelerate.step_count.continue_check;
0x0008BE        092002C4                 r0 = Null + M[$vee.accelerate.step_count.min_flag];
0x0008BF        0002000F                 Null = r0 + Null;
0x0008C0        DD000026                 if EQ jump $vee.accelerate.step_count.continue_check;
0x0008C1        FD0000FF 092032C4        r0 = Null + M[$vee.accelerate.step_count.min_value];
0x0008C3        2023002F                 r0 = r1 - r0;
0x0008C4        21020028                 Null = r0 - 40;
0x0008C5        DD400021                 if NEG jump $vee.accelerate.step_count.continue_check;
0x0008C6        E1F0FA01                 call $block_interrupts;
0x0008C7        092002B2                 r0 = Null + M[$vee.accelerate.step_value];
0x0008C8        E422002F                 r0 = r0 + 1;
0x0008C9        192002B2                 M[$vee.accelerate.step_value] = r0 + Null;
0x0008CA        E1F0F9EB                 call $interrupt.unblock;
0x0008CB        01200000                 r0 = Null + 0;
0x0008CC        192002C4                 M[$vee.accelerate.step_count.min_flag] = r0 + Null;
0x0008CD        E420002F                 r0 = Null + 1;
0x0008CE        FD0000FF 192032C3        M[$vee.accelerate.step_count.max_flag] = r0 + Null;
0x0008D0        194002C3                 M[$vee.accelerate.step_count.index_max] = r2 + Null;
0x0008D1        DDF00015                 jump $vee.accelerate.step_count.continue_check;

 <$vee.accelerate.step_count.check_max_value>
0x0008D2        FD0000FF 092032C2        r0 = Null + M[$vee.accelerate.step_count.status];
0x0008D4        0002000F                 Null = r0 + Null;
0x0008D5        DD000011                 if EQ jump $vee.accelerate.step_count.continue_check;
0x0008D6        01200000                 r0 = Null + 0;
0x0008D7        FD0000FF 192032C2        M[$vee.accelerate.step_count.status] = r0 + Null;
0x0008D9        21030046                 Null = r1 - 70;
0x0008DA        DD50000C                 if POS jump $vee.accelerate.step_count.continue_check;
0x0008DB        FD0000FF 092032C3        r0 = Null + M[$vee.accelerate.step_count.max_flag];
0x0008DD        0002000F                 Null = r0 + Null;
0x0008DE        DD000008                 if EQ jump $vee.accelerate.step_count.continue_check;
0x0008DF        01200000                 r0 = Null + 0;
0x0008E0        FD0000FF 192032C3        M[$vee.accelerate.step_count.max_flag] = r0 + Null;
0x0008E2        E420002F                 r0 = Null + 1;
0x0008E3        192002C4                 M[$vee.accelerate.step_count.min_flag] = r0 + Null;
0x0008E4        FD0000FF 193032C4        M[$vee.accelerate.step_count.min_value] = r1 + Null;

 <$vee.accelerate.step_count.continue_check>
0x0008E6        FD0000FF 195032C1        M[$vee.accelerate.step_count.p_value] = r3 + Null;
0x0008E8        095002C2                 r3 = Null + M[$vee.accelerate.step_count.index_curr];
0x0008E9        E455002F                 r3 = r3 + 1;
0x0008EA        195002C2                 M[$vee.accelerate.step_count.index_curr] = r3 + Null;
0x0008EB        DDF0FA03                 jump $pop_rLink_and_rts;

 <$vee.accelerate.safe_driver>
0x0008EC        F3D00000                 push rLink;
0x0008ED        01300000                 r1 = Null + 0;
0x0008EE        01400000                 r2 = Null + 0;
0x0008EF        01500000                 r3 = Null + 0;
0x0008F0        01600000                 r4 = Null + 0;
0x0008F1        01700000                 r5 = Null + 0;
0x0008F2        093002B7                 r1 = Null + M[$vee.accelerate.acc_axis_x];
0x0008F3        9B330000                 r1 = r1 * r1 (int);
0x0008F4        FD0000FF 094032B7        r2 = Null + M[$vee.accelerate.acc_axis_y];
0x0008F6        9B440000                 r2 = r2 * r2 (int);
0x0008F7        095002B8                 r3 = Null + M[$vee.accelerate.acc_axis_z];
0x0008F8        9B550000                 r3 = r3 * r3 (int);
0x0008F9        21040040                 Null = r2 - 64;
0x0008FA        DD40000B                 if NEG jump $vee.accelerate.safe_driver.shake_action_check;
0x0008FB        096002BD                 r4 = Null + M[$vee.accelerate.safe_driver.nod_action_flag];
0x0008FC        0006000F                 Null = r4 + Null;
0x0008FD        DD10F9F1                 if NE jump $pop_rLink_and_rts;
0x0008FE        21030019                 Null = r1 - 25;
0x0008FF        DD50F9EF                 if POS jump $pop_rLink_and_rts;
0x000900        E460002F                 r4 = Null + 1;
0x000901        196002BD                 M[$vee.accelerate.safe_driver.nod_action_flag] = r4 + Null;
0x000902        01404F22                 r2 = Null + 20258;
0x000903        E1F0F929                 call $message.send_short;
0x000904        DDF0F9EA                 jump $pop_rLink_and_rts;

 <$vee.accelerate.safe_driver.shake_action_check>
0x000905        FD0000FF 096032BD        r4 = Null + M[$vee.accelerate.safe_driver.shake_action_flag];
0x000907        0006000F                 Null = r4 + Null;
0x000908        DD10F9E6                 if NE jump $pop_rLink_and_rts;
0x000909        21050019                 Null = r3 - 25;
0x00090A        DD40F9E4                 if NEG jump $pop_rLink_and_rts;
0x00090B        E460002F                 r4 = Null + 1;
0x00090C        FD0000FF 196032BD        M[$vee.accelerate.safe_driver.shake_action_flag] = r4 + Null;
0x00090E        01404F23                 r2 = Null + 20259;
0x00090F        E1F0F91D                 call $message.send_short;
0x000910        DDF0F9DE                 jump $pop_rLink_and_rts;

 <$i2c.send_byte>
0x000911        F3D00000                 push rLink;
0x000912        094002CF                 r2 = Null + M[$i2c.pio_sda_mask];
0x000913        0930FE51                 r1 = Null + M[0xfffe51];
0x000914        FD0000FF 096432CE        r4 = r2 + M[$i2c.pio_sclk_mask];
0x000916        87360000                 r1 = r1 OR r4;
0x000917        23360000                 r1 = r1 - r4;
0x000918        01500080                 r3 = Null + 128;

 <$M.i2c.send_byte.loop>
0x000919        0063000F                 r4 = r1 + Null;
0x00091A        8002005F                 Null = r0 AND r3;
0x00091B        00630041                 if NE r4 = r1 + r2;
0x00091C        1960FE51                 M[0xfffe51] = r4 + Null;
0x00091D        E1F00069                 call $i2c.delay_low_clk;
0x00091E        FD0000FF 096632CE        r4 = r4 + M[$i2c.pio_sclk_mask];
0x000920        1960FE51                 M[0xfffe51] = r4 + Null;
0x000921        E1F00061                 call $i2c.delay_high_clk;
0x000922        8D55007F                 r3 = r3 LSHIFT -1;
0x000923        DD10FFF6                 if NE jump $M.i2c.send_byte.loop;
0x000924        0920FE53                 r0 = Null + M[0xfffe53];
0x000925        87240000                 r0 = r0 OR r2;
0x000926        23240000                 r0 = r0 - r2;
0x000927        1920FE53                 M[0xfffe53] = r0 + Null;
0x000928        0063004F                 r4 = r1 + r2;
0x000929        1960FE51                 M[0xfffe51] = r4 + Null;
0x00092A        E1F0005C                 call $i2c.delay_low_clk;
0x00092B        E420002F                 r0 = Null + 1;
0x00092C        0930FE4F                 r1 = Null + M[0xfffe4f];
0x00092D        8003004F                 Null = r1 AND r2;
0x00092E        00200000                 if EQ r0 = Null + Null;
0x00092F        FD0000FF 096632CE        r4 = r4 + M[$i2c.pio_sclk_mask];
0x000931        1960FE51                 M[0xfffe51] = r4 + Null;
0x000932        E1F00050                 call $i2c.delay_high_clk;
0x000933        FD0000FF 296632CE        r4 = r4 - M[$i2c.pio_sclk_mask];
0x000935        1960FE51                 M[0xfffe51] = r4 + Null;
0x000936        0930FE53                 r1 = Null + M[0xfffe53];
0x000937        87340000                 r1 = r1 OR r2;
0x000938        1930FE53                 M[0xfffe53] = r1 + Null;
0x000939        DDF0F9B5                 jump $pop_rLink_and_rts;

 <$i2c.receive_byte>
0x00093A        F3D00000                 push rLink;
0x00093B        FD0000FF 192032CF        M[$i2c.send_ack] = r0 + Null;
0x00093D        094002CF                 r2 = Null + M[$i2c.pio_sda_mask];
0x00093E        0920FE53                 r0 = Null + M[0xfffe53];
0x00093F        87240000                 r0 = r0 OR r2;
0x000940        3924FE53                 M[0xfffe53] = r0 - r2;
0x000941        0930FE51                 r1 = Null + M[0xfffe51];
0x000942        FD0000FF 092432CE        r0 = r2 + M[$i2c.pio_sclk_mask];
0x000944        87320000                 r1 = r1 OR r0;
0x000945        01200000                 r0 = Null + 0;
0x000946        01500080                 r3 = Null + 128;

 <$M.i2c.receive_byte.loop>
0x000947        E1F0003F                 call $i2c.delay_low_clk;
0x000948        0960FE4F                 r4 = Null + M[0xfffe4f];
0x000949        8006004F                 Null = r4 AND r2;
0x00094A        00220051                 if NE r0 = r0 + r3;
0x00094B        1930FE51                 M[0xfffe51] = r1 + Null;
0x00094C        E1F00036                 call $i2c.delay_high_clk;
0x00094D        FD0000FF 296332CE        r4 = r1 - M[$i2c.pio_sclk_mask];
0x00094F        1960FE51                 M[0xfffe51] = r4 + Null;
0x000950        8D55007F                 r3 = r3 LSHIFT -1;
0x000951        DD10FFF6                 if NE jump $M.i2c.receive_byte.loop;
0x000952        0930FE53                 r1 = Null + M[0xfffe53];
0x000953        87340000                 r1 = r1 OR r2;
0x000954        1930FE53                 M[0xfffe53] = r1 + Null;
0x000955        FD0000FF 090032CF        Null = Null + M[$i2c.send_ack];
0x000957        20660041                 if NE r4 = r4 - r2;
0x000958        1960FE51                 M[0xfffe51] = r4 + Null;
0x000959        E1F0002D                 call $i2c.delay_low_clk;
0x00095A        FD0000FF 096632CE        r4 = r4 + M[$i2c.pio_sclk_mask];
0x00095C        1960FE51                 M[0xfffe51] = r4 + Null;
0x00095D        E1F00025                 call $i2c.delay_high_clk;
0x00095E        FD0000FF 296632CE        r4 = r4 - M[$i2c.pio_sclk_mask];
0x000960        1960FE51                 M[0xfffe51] = r4 + Null;
0x000961        DDF0F98D                 jump $pop_rLink_and_rts;

 <$i2c.start_bit>
0x000962        F3D00000                 push rLink;
0x000963        FD0000FF 093032CE        r1 = Null + M[$i2c.pio_sclk_mask];
0x000965        094002CF                 r2 = Null + M[$i2c.pio_sda_mask];
0x000966        0920FE53                 r0 = Null + M[0xfffe53];
0x000967        0053004F                 r3 = r1 + r2;
0x000968        87250000                 r0 = r0 OR r3;
0x000969        1920FE53                 M[0xfffe53] = r0 + Null;
0x00096A        E1F0001C                 call $i2c.delay_low_clk;
0x00096B        0920FE51                 r0 = Null + M[0xfffe51];
0x00096C        0053004F                 r3 = r1 + r2;
0x00096D        87250000                 r0 = r0 OR r3;
0x00096E        1920FE51                 M[0xfffe51] = r0 + Null;
0x00096F        E1F00013                 call $i2c.delay_high_clk;
0x000970        3924FE51                 M[0xfffe51] = r0 - r2;
0x000971        E1F00011                 call $i2c.delay_high_clk;
0x000972        3925FE51                 M[0xfffe51] = r0 - r3;
0x000973        DDF0F97B                 jump $pop_rLink_and_rts;

 <$i2c.stop_bit>
0x000974        F3D00000                 push rLink;
0x000975        FD0000FF 093032CE        r1 = Null + M[$i2c.pio_sclk_mask];
0x000977        094002CF                 r2 = Null + M[$i2c.pio_sda_mask];
0x000978        0920FE51                 r0 = Null + M[0xfffe51];
0x000979        0053004F                 r3 = r1 + r2;
0x00097A        87250000                 r0 = r0 OR r3;
0x00097B        3925FE51                 M[0xfffe51] = r0 - r3;
0x00097C        E1F0000A                 call $i2c.delay_low_clk;
0x00097D        3924FE51                 M[0xfffe51] = r0 - r2;
0x00097E        E1F00004                 call $i2c.delay_high_clk;
0x00097F        1920FE51                 M[0xfffe51] = r0 + Null;
0x000980        E1F00002                 call $i2c.delay_high_clk;
0x000981        DDF0F96D                 jump $pop_rLink_and_rts;

 <$i2c.delay_high_clk>
0x000982        01C0013C                 r10 = Null + 316;
0x000983        E5F00002                 do $M.i2c.delay_high_clk.loop;
0x000984        03000000                 Null = Null + Null;

 <$M.i2c.delay_high_clk.loop>
0x000985        DC0D000F                 rts;

 <$i2c.delay_low_clk>
0x000986        01C00174                 r10 = Null + 372;
0x000987        E5F00002                 do $M.i2c.delay_low_clk.loop;
0x000988        03000000                 Null = Null + Null;

 <$M.i2c.delay_low_clk.loop>
0x000989        DC0D000F                 rts;
...

 <$message.register_handler_with_mask>
0x0009D1        8966FFFF                 r4 = r4 XOR 0xffff;
0x0009D2        D5630003                 M[r1 + 3] = r4;
0x0009D3        DDF00003                 jump $M.message.register_handler.mask_field_set;

 <$message.register_handler>
0x0009D4        8520FFFF                 r0 = Null OR 0xffff;
0x0009D5        D5230003                 M[r1 + 3] = r0;

 <$M.message.register_handler.mask_field_set>
0x0009D6        F3D00000                 push rLink;
0x0009D7        E1F0F8F0                 call $block_interrupts;
0x0009D8        FD0000FF 092032C9        r0 = Null + M[$message.last_addr];
0x0009DA        D5230000                 M[r1 + 0] = r0;
0x0009DB        FD0000FF 193032C9        M[$message.last_addr] = r1 + Null;
0x0009DD        D5430001                 M[r1 + 1] = r2;
0x0009DE        D5530002                 M[r1 + 2] = r3;
0x0009DF        E1F0F8D6                 call $interrupt.unblock;
0x0009E0        DDF0F90E                 jump $pop_rLink_and_rts;

 <$message.send_ready_wait_for_go>
0x0009E1        F3D00000                 push rLink;
0x0009E2        013002A0                 r1 = Null + 672;
0x0009E3        01407000                 r2 = Null + 28672;
0x0009E4        015009E7                 r3 = Null + 2535;
0x0009E5        E1F0FFEF                 call $message.register_handler;
0x0009E6        DDF00004                 jump $M.message.send_ready_wait_for_go.go_from_vm_setup_done;

 <$M.message.send_ready_wait_for_go.go_from_vm_handler>
0x0009E7        E420002F                 r0 = Null + 1;
0x0009E8        192002CC                 M[$M.message.send_ready_wait_for_go.go_from_vm] = r0 + Null;
0x0009E9        DC0D000F                 rts;

 <$M.message.send_ready_wait_for_go.go_from_vm_setup_done>
0x0009EA        85408000                 r2 = Null OR 0x8000;
0x0009EB        E1F0F841                 call $message.send_short;

 <$M.message.send_ready_wait_for_go.vm_go_wait>
0x0009EC        090002CC                 Null = Null + M[$M.message.send_ready_wait_for_go.go_from_vm];
0x0009ED        DD00FFFF                 if EQ jump $M.message.send_ready_wait_for_go.vm_go_wait;
0x0009EE        DDF0F900                 jump $pop_rLink_and_rts;

 <$pskey.initialise>
0x0009EF        F3D00000                 push rLink;
0x0009F0        FD0000FF 0130329E        r1 = Null + -52578;
0x0009F2        FD000000 01408007        r2 = Null + 32775;
0x0009F4        01500211                 r3 = Null + 529;
0x0009F5        E1F0FFDF                 call $message.register_handler;
0x0009F6        013002A4                 r1 = Null + 676;
0x0009F7        85408008                 r2 = Null OR 0x8008;
0x0009F8        01500211                 r3 = Null + 529;
0x0009F9        E1F0FFDB                 call $message.register_handler;
0x0009FA        DDF0F8F4                 jump $pop_rLink_and_rts;

 <$interrupt.initialise>
0x0009FB        01200015                 r0 = Null + 21;
0x0009FC        1920FE14                 M[0xfffe14] = r0 + Null;
0x0009FD        01200311                 r0 = Null + 785;
0x0009FE        1920FE15                 M[0xfffe15] = r0 + Null;
0x0009FF        E420002F                 r0 = Null + 1;
0x000A00        1920FE11                 M[0xfffe11] = r0 + Null;
0x000A01        1920FE12                 M[0xfffe12] = r0 + Null;
0x000A02        1920FE13                 M[0xfffe13] = r0 + Null;
0x000A03        1900FE4E                 M[0xfffe4e] = Null + Null;
0x000A04        85EE0080                 rFlags = rFlags OR 0x80;
0x000A05        DC0D000F                 rts;
0x000A06        DDF0F5FA                 jump $reset;
0x000A07        DDF0F5FB                 jump $interrupt.handler;

 <$_stack_initialise>
0x000A08        FD0000FF 01B03187        r9 = Null + -52857;
0x000A0A        19B0FE67                 M[0xfffe67] = r9 + Null;
0x000A0B        FD0000FF 01B03000        r9 = Null + -53248;
0x000A0D        19B0FE66                 M[0xfffe66] = r9 + Null;
0x000A0E        19B0FE68                 M[0xfffe68] = r9 + Null;
0x000A0F        19B0FE6A                 M[0xfffe6a] = r9 + Null;
0x000A10        E420002F                 r0 = Null + 1;
0x000A11        1920FE9F                 M[0xfffe9f] = r0 + Null;
0x000A12        DC0D000F                 rts;
...

 <$cbuffer.initialise>
0x000A1A        F3D00000                 push rLink;
0x000A1B        0130029C                 r1 = Null + 668;
0x000A1C        85408001                 r2 = Null OR 0x8001;
0x000A1D        0150008A                 r3 = Null + 138;
0x000A1E        E1F0FFB6                 call $message.register_handler;
0x000A1F        DDF0F8CF                 jump $pop_rLink_and_rts;

 <$error>
0x000A20        81EEFF7F                 rFlags = rFlags AND 0xff7f;
0x000A21        FD0000FF 09B032C7        r9 = Null + M[$error.handler];
0x000A23        DC0B0001                 if NE jump r9;

 <$M.error.error_loop>
0x000A24        E400001F                 break;
0x000A25        DDF0FFFF                 jump $M.error.error_loop;

 <$message.initialise>
0x000A26        0920E000                 r0 = Null + M[0xffe000];
0x000A27        192002CB                 M[$message.last_seq_sent] = r0 + Null;
0x000A28        DC0D000F                 rts;

 <$spi_comm.initialize>
0x000A29        01205555                 r0 = Null + 21845;
0x000A2A        19200046                 M[$M.spi_block.cmd_ready] = r0 + Null;
0x000A2B        DC0D000F                 rts;
------------------------------------------------------------------------
Region: flash.code
------------------------------------------------------------------------

 <$main>
0x003000        E1F0DA08                 call $_stack_initialise;
0x003001        E1F0D03A                 call $flash.init_dmconst;
0x003002        E1F0D9F9                 call $interrupt.initialise;
0x003003        E1F0DA23                 call $message.initialise;
0x003004        E1F0D9EB                 call $pskey.initialise;
0x003005        E1F0DA15                 call gKDRG7n0VmXKO24LXPx1AqmX/e81wPKYFpXoDqPDhvk=;
0x003006        E1F0DA0D                 call .L0;
0x003007        E1F0DA22                 call $spi_comm.initialize;
0x003008        E1F0D496                 call $vee.heartrate.start;
0x003009        E1F0D2E7                 call $vee.accelerate.start;
0x00300A        01401000                 r2 = Null + 4096;
0x00300B        E1F0D221                 call $message.send_short;
0x00300C        E1F0D9D5                 call $message.send_ready_wait_for_go;

 <$M.main.main_loop>
0x00300D        E1F0D446                 call $vee.accelerate.angle_calc;
0x00300E        E1F0D59B                 call $vee.heartrate.calc;
0x00300F        DDF0FFFE                 jump $M.main.main_loop;
0x003010        DDF0FFFD                 jump $M.main.main_loop;
========================================================================
datadump
========================================================================

------------------------------------------------------------------------
Region: DM1_REGION
------------------------------------------------------------------------
0x000000	$M.spi_block.SPI_BLOCK
0x000000	$M.spi_block.signature
        435352 204356 432043 4F4E54 
        524F4C 

0x000005	$M.spi_block.payload
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x000045	$M.spi_block.command
        000000 

0x000046	$M.spi_block.cmd_ready
        00AAAA 

0x000047	$M.spi_block.cmd_complete
        005555 

0x000048	$M.spi_block.cmd_status
        005555 

0x000049	$M.spi_block.cmd_length
        000000 

0x00004A	$M.math.sqrt.sqrtcoefs
0x00004A	$M.math.sqrt.coefs
        F88B71 1F11C9 C6F3BF 52AA94 
        0EC449 

0x00004F	$M.math.sqrt.sqrtofhalf
        5A827A 

0x000050	$interrupt.start_time
        000000 

0x000051	1VAlLJXRC/W7JVLyUw3hgp0q3EPY0IRRwS96MIinG24=
        000000 000000 000000 000000 
        000000 

0x000056	DPKiv18AcyuQTbV8GREMcnL+NqTmCHRyz2s7fniKu2g=
        000000 000000 000000 000000 
        000000 

0x00005B	Cl/mPdjkeNx48eBmGedC/Pp1RK8a2gotjLSawW78XFA=
        000000 000000 000000 000000 
        000000 

0x000060	qHTKFW5JsFgeR1a9+q8N4ogtJHTHW5IGnK+R1PFtJgA=
        000000 

0x000061	Q1JVVkJS190ARDPhHK8BC5LKGRvZLNFay1zfhzhwt8Q=
        000000 

0x000062	$cbuffer.port_limit_addr
0x000062	$cbuffer.read_port_limit_addr
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x00006E	$cbuffer.write_port_limit_addr
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x00007A	$vee.accelerate.acc_read_buf
        000000 000000 000000 000000 
        000000 000000 

0x000080	$vee.heartrate.sample_cbuffer
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0x0000F9	$vee.heartrate.hb_enable_from_vm_message_struc
        000000 000000 000000 000000 

0x0000FD	$vee.heartrate.sample_cbuffer_struc
        000079 000080 000080 

0x000100	$vee.heartrate.calc_cbuffer
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 

0x000179	$vee.heartrate.calc_buff
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x0001F1	$message.long_message_data
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0x000249	$flash.code.address
	-------- [0x000C octets]

0x00024D	$flash.data16.address
	-------- [0x000C octets]

0x000251	$flash.data24.address
	-------- [0x000C octets]

0x000255	$flash.windowed_data16.address
	-------- [0x000C octets]

0x000259	$vee.accelerate.neck_protect.angle_x_init_buf
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0x000263	$vee.accelerate.neck_protect.angle_z_init_buf
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0x00026D	$vee.accelerate.neck_protect.acc_y_value_buf
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0x000277	$interrupt.isr_call_table
        000244 000A20 000045 000A20 
        000A20 000A20 000A20 000A20 
        000A20 

0x000280	$vee.heartrate.hb_disable_from_vm_message_struc
        000000 000000 000000 000000 

0x000284	$vee.heartrate.recover_hb_value_from_vm_message_struc
        000000 000000 000000 000000 

0x000288	$vee.heartrate.sport_time_timer_struc
        000000 000000 000000 000000 

0x00028C	$vee.accelerate.acc_sample_disable_from_vm_message_struc
        000000 000000 000000 000000 

0x000290	$vee.accelerate.neck_protect_enable_from_vm_message_struc
        000000 000000 000000 000000 

0x000294	$vee.accelerate.const_seat_enable_from_vm_message_struc
        000000 000000 000000 000000 

0x000298	$vee.accelerate.const_seat.seat_timer_struc
        000000 000000 000000 000000 

0x00029C	$cbuffer.configure_port_message_struc
        000000 000000 000000 000000 

0x0002A0	$M.message.send_ready_wait_for_go.go_from_vm_message_struc
        000000 000000 000000 000000 

0x0002A4	$pskey.result_fail_message_struc
        000000 000000 000000 000000 

0x0002A8	$cbuffer.tmp
        000000 000000 

0x0002AA	$vee.heartrate.hb_time_enable
        000000 

0x0002AB	$vee.heartrate.time_value
        000000 

0x0002AC	$vee.heartrate.value_msb
        000000 

0x0002AD	$vee.heartrate.hb_calc.max_flag
        000001 

0x0002AE	$vee.heartrate.hb_calc.max_index
        000000 

0x0002AF	$vee.heartrate.hb_calc.max_value
        000000 

0x0002B0	$vee.heartrate.hb_smooth.p_smooth_value
        000000 

0x0002B1	$vee.heartrate.hb_smooth.p_yzero
        000000 

0x0002B2	$vee.accelerate.step_value
        000000 

0x0002B3	$vee.accelerate.step_value_enable
        000000 

0x0002B4	$vee.accelerate.neck_protect_enable
        000000 

0x0002B5	$vee.accelerate.acc_valid
        000000 

0x0002B6	$vee.accelerate.angle_y_int
        000000 

0x0002B7	$vee.accelerate.acc_axis_x
        000000 

0x0002B8	$vee.accelerate.acc_axis_z
        000000 

0x0002B9	$vee.accelerate.const_seat.seat_timer_count
        000000 

0x0002BA	$vee.accelerate.const_seat.stable_count
        000000 

0x0002BB	$vee.accelerate.const_seat.status
        000000 

0x0002BC	$vee.accelerate.const_seat.max_value
        000000 

0x0002BD	$vee.accelerate.safe_driver.nod_action_flag
        000000 

0x0002BE	$vee.accelerate.neck_protect.acc_count
        000000 

0x0002BF	$vee.accelerate.neck_protect.angle_x_init
        000000 

0x0002C0	$vee.accelerate.neck_protect.angle_z_init
        000000 

0x0002C1	$vee.accelerate.neck_protect.neck_timer_count
        000000 

0x0002C2	$vee.accelerate.step_count.index_curr
        000000 

0x0002C3	$vee.accelerate.step_count.index_max
        000000 

0x0002C4	$vee.accelerate.step_count.min_flag
        000001 

0x0002C5	$cbuffer.write_port_connect_address
        000000 

0x0002C6	$cbuffer.read_port_connect_address
        000000 

0x0002C7	$cbuffer.auto_mcu_message
        000001 000000 

0x0002C9	$interrupt.total_time
        000000 

0x0002CA	$message.queue_read_ptr
        000000 

0x0002CB	$message.last_seq_sent
        000000 

0x0002CC	$M.message.send_ready_wait_for_go.go_from_vm
        000000 

0x0002CD	$pskey.last_addr
        FFFFFF 

0x0002CE	$timer.last_addr
        FFFFFF 

0x0002CF	$i2c.pio_sda_mask
        000040 


------------------------------------------------------------------------
Region: DM2_REGION
------------------------------------------------------------------------
0xFF3000	$stack.buffer
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF3188	$message.queue
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF31F6	$cbuffer.read_port_buffer_size
0xFF31F6	$cbuffer.port_buffer_size
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF3202	$cbuffer.write_port_buffer_size
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF320E	$cbuffer.read_port_offset_addr
0xFF320E	$cbuffer.port_offset_addr
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF321A	$cbuffer.write_port_offset_addr
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 

0xFF3226	$vee.heartrate.hb_addr_min
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF3238	$vee.heartrate.hb_addr_max
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF324A	$vee.heartrate.hb_smooth.hb_smooth_buff
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF3254	$vee.accelerate.neck_protect.angle_y_init_buf
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF325E	$vee.accelerate.neck_protect.acc_x_value_buf
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF3268	$vee.accelerate.neck_protect.acc_z_value_buf
        000000 000000 000000 000000 
        000000 000000 000000 000000 
        000000 000000 

0xFF3272	$vee.heartrate.hb_smooth.hb_origin_data
        000000 000000 000000 000000 
        000000 000000 

0xFF3278	$vee.accelerate.acc_calc_buf
        000000 000000 000000 000000 
        000000 000000 

0xFF327E	$vee.heartrate.time_value_from_vm_message_struc
        000000 000000 000000 000000 

0xFF3282	$vee.heartrate.sample_timer_struc
        000000 000000 000000 000000 

0xFF3286	$vee.accelerate.acc_sample_enable_from_vm_message_struc
        000000 000000 000000 000000 

0xFF328A	$vee.accelerate.step_value_enable_from_vm_message_struc
        000000 000000 000000 000000 

0xFF328E	$vee.accelerate.safe_driver_enable_from_vm_message_struc
        000000 000000 000000 000000 

0xFF3292	$vee.accelerate.acc_timer_struc
        000000 000000 000000 000000 

0xFF3296	$vee.accelerate.neck_protect.neck_timer_struc
        000000 000000 000000 000000 

0xFF329A	$message.reattempt_timer_struc
        000000 000000 000000 000000 

0xFF329E	$pskey.result_pass_message_struc
        000000 000000 000000 000000 

0xFF32A2	$pskey.reattempt_timer_struc
        000000 000000 000000 000000 

0xFF32A6	$vee.heartrate.calc_cbuffer_struc
        000079 000100 000100 

0xFF32A9	$vee.heartrate.hb_sample_enable
        000000 

0xFF32AA	$vee.heartrate.heartrate
        000000 

0xFF32AB	$vee.heartrate.value_lsb
        000000 

0xFF32AC	$vee.heartrate.hb_calc.status
        000000 

0xFF32AD	$vee.heartrate.hb_calc.min_flag
        000001 

0xFF32AE	$vee.heartrate.hb_calc.min_index
        000000 

0xFF32AF	$vee.heartrate.hb_calc.min_value
        0007D0 

0xFF32B0	$vee.heartrate.hb_smooth.p_hb_value
        000000 

0xFF32B1	$vee.heartrate.hb_smooth.hb_smooth_status
        000000 

0xFF32B2	$vee.accelerate.acc_sample_enable
        000000 

0xFF32B3	$vee.accelerate.safe_driver_enable
        000000 

0xFF32B4	$vee.accelerate.const_seat_enable
        000000 

0xFF32B5	$vee.accelerate.angle_x_int
        000000 

0xFF32B6	$vee.accelerate.angle_z_int
        000000 

0xFF32B7	$vee.accelerate.acc_axis_y
        000000 

0xFF32B8	$vee.accelerate.const_seat.seat_timer_enable
        000000 

0xFF32B9	$vee.accelerate.const_seat.move_timer_count
        000000 

0xFF32BA	$vee.accelerate.const_seat.p_value
        000000 

0xFF32BB	$vee.accelerate.const_seat.max_flag
        000000 

0xFF32BC	$vee.accelerate.const_seat.stable_status
        000000 

0xFF32BD	$vee.accelerate.safe_driver.shake_action_flag
        000000 

0xFF32BE	$vee.accelerate.neck_protect.angle_count
        000000 

0xFF32BF	$vee.accelerate.neck_protect.angle_y_init
        000000 

0xFF32C0	$vee.accelerate.neck_protect.neck_timer_enable
        000000 

0xFF32C1	$vee.accelerate.step_count.p_value
        000000 

0xFF32C2	$vee.accelerate.step_count.status
        000000 

0xFF32C3	$vee.accelerate.step_count.max_flag
        000001 

0xFF32C4	$vee.accelerate.step_count.min_value
        000000 

0xFF32C5	$cbuffer.write_port_disconnect_address
        000000 

0xFF32C6	$cbuffer.read_port_disconnect_address
        000000 

0xFF32C7	$error.handler
        000000 

0xFF32C8	$interrupt.block_count
        000000 

0xFF32C9	$message.last_addr
        FFFFFF 

0xFF32CA	$message.queue_write_ptr
        000000 

0xFF32CB	$message.long_message_size
        000000 

0xFF32CC	$pskey.request_in_progress
        000000 

0xFF32CD	$timer.id
        000001 

0xFF32CE	$i2c.pio_sclk_mask
        000080 

0xFF32CF	$i2c.send_ack
        000000 

========================================================================
memusage
========================================================================
DATA:
  DM1_REGION: 720 of 32768 words used, 32048 words available in 1 blocks
  DM2_REGION: 720 of 32768 words used, 32048 words available in 1 blocks
TOTAL: 1440 of 65536 words used, 64096 words available in 2 blocks

CODE:
  PM_REGION: 2604 of 11264 words used, 8660 words available in 1 blocks
  flash.code: 17 of 16764928 words used, 16764911 words available in 1 blocks
TOTAL: 2621 of 16776192 words used, 16773571 words available in 2 blocks

